{"version":3,"sources":["validateScreenOptions.js"],"names":["deprecatedKeys","screenOptions","route","keys","Object","deprecatedKey","find","key","includes","title","Error","routeName","join","map","toUpperCase","slice"],"mappings":"uQAAA,GAAMA,CAAAA,cAAc,CAAG,CAAC,QAAD,CAAvB,C,aAMe,kBAACC,aAAD,CAAgBC,KAAhB,CAA0B,CACvC,GAAMC,CAAAA,IAAI,CAAGC,MAAM,CAACD,IAAP,CAAYF,aAAZ,CAAb,CAEA,GAAMI,CAAAA,aAAa,CAAGF,IAAI,CAACG,IAAL,CAAU,SAAAC,GAAG,QAAIP,CAAAA,cAAc,CAACQ,QAAf,CAAwBD,GAAxB,CAAJ,EAAb,CAAtB,CAEA,GAAI,MAAON,CAAAA,aAAa,CAACQ,KAArB,GAA+B,UAAnC,CAA+C,CAC7C,KAAM,IAAIC,CAAAA,KAAJ,CACJ,uEAEIR,KAAK,CAACS,SAFV,gBAIE,8BAJF,CAKE,GALF,CAME,oCANF,CAOE,GAPF,CAQE,EARF,CASE,OATF,CAUE,wBAVF,CAWE,gCAXF,CAYE,IAZF,EAaEC,IAbF,CAaO,IAbP,CADI,CAAN,CAgBD,CAED,GAAIP,aAAa,EAAI,MAAOJ,CAAAA,aAAa,CAACI,aAAD,CAApB,GAAwC,UAA7D,CAAyE,CACvE,KAAM,IAAIK,CAAAA,KAAJ,CACJ,KACOL,aADP,iEAEIH,KAAK,CAACS,SAFV,gBAIE,8BAJF,CAKE,GALF,QAMSN,aANT,uBAOE,wBAPF,CAQE,QARF,CASE,GATF,CAUE,EAVF,CAWE,OAXF,CAYE,wBAZF,QAaSA,aAbT,4BAcE,IAdF,EAeEO,IAfF,CAeO,IAfP,CADI,CAAN,CAkBD,CAED,GAAIP,aAAa,EAAI,MAAOJ,CAAAA,aAAa,CAACI,aAAD,CAApB,GAAwC,QAA7D,CAAuE,CACrE,KAAM,IAAIK,CAAAA,KAAJ,CACJ,iBACmBL,aADnB,yCAEIH,KAAK,CAACS,SAFV,aAIE,IAJF,CAKE,iDALF,CAME,GANF,QAOSN,aAPT,+CAQKD,MAAM,CAACD,IAAP,CAAYF,aAAa,CAACI,aAAD,CAAzB,EAA0CQ,GAA1C,CACD,SAAAN,GAAG,mBAAeA,GAAf,WADF,CARL,GAWE,QAXF,CAYE,GAZF,CAaE,IAbF,CAcE,OAdF,CAeE,GAfF,kCAgBKH,MAAM,CAACD,IAAP,CAAYF,aAAa,CAACI,aAAD,CAAzB,EAA0CQ,GAA1C,CACD,SAAAN,GAAG,gBACMF,aAAa,CAAGE,GAAG,CAAC,CAAD,CAAH,CAAOO,WAAP,EAAhB,CAAuCP,GAAG,CAACQ,KAAJ,CAAU,CAAV,CAD7C,YADF,CAhBL,GAoBE,GApBF,GAqBEH,IArBF,CAqBO,IArBP,CADI,CAAN,CAwBD,CACF,C","sourcesContent":["const deprecatedKeys = ['tabBar'];\n\n/**\n * Make sure screen options returned by the `getScreenOption`\n * are valid\n */\nexport default (screenOptions, route) => {\n  const keys = Object.keys(screenOptions);\n\n  const deprecatedKey = keys.find(key => deprecatedKeys.includes(key));\n\n  if (typeof screenOptions.title === 'function') {\n    throw new Error(\n      [\n        `\\`title\\` cannot be defined as a function in navigation options for \\`${\n          route.routeName\n        }\\` screen. \\n`,\n        'Try replacing the following:',\n        '{',\n        '    title: ({ state }) => state...',\n        '}',\n        '',\n        'with:',\n        '({ navigation }) => ({',\n        '    title: navigation.state...',\n        '})',\n      ].join('\\n')\n    );\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'function') {\n    throw new Error(\n      [\n        `\\`${deprecatedKey}\\` cannot be defined as a function in navigation options for \\`${\n          route.routeName\n        }\\` screen. \\n`,\n        'Try replacing the following:',\n        '{',\n        `    ${deprecatedKey}: ({ state }) => ({`,\n        '         key: state...',\n        '    })',\n        '}',\n        '',\n        'with:',\n        '({ navigation }) => ({',\n        `    ${deprecatedKey}Key: navigation.state...`,\n        '})',\n      ].join('\\n')\n    );\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'object') {\n    throw new Error(\n      [\n        `Invalid key \\`${deprecatedKey}\\` defined in navigation options for \\`${\n          route.routeName\n        }\\` screen.`,\n        '\\n',\n        'Try replacing the following navigation options:',\n        '{',\n        `    ${deprecatedKey}: {`,\n        ...Object.keys(screenOptions[deprecatedKey]).map(\n          key => `        ${key}: ...,`\n        ),\n        '    },',\n        '}',\n        '\\n',\n        'with:',\n        '{',\n        ...Object.keys(screenOptions[deprecatedKey]).map(\n          key =>\n            `    ${deprecatedKey + key[0].toUpperCase() + key.slice(1)}: ...,`\n        ),\n        '}',\n      ].join('\\n')\n    );\n  }\n};\n"]}