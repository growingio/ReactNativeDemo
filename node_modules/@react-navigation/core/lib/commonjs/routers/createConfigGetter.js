var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _objectSpread2=_interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));var _invariant=_interopRequireDefault(require("../utils/invariant"));var _getScreenForRouteName=_interopRequireDefault(require("./getScreenForRouteName"));var _validateScreenOptions=_interopRequireDefault(require("./validateScreenOptions"));function applyConfig(configurer,navigationOptions,configProps){if(typeof configurer==='function'){return(0,_objectSpread2.default)({},navigationOptions,configurer((0,_objectSpread2.default)({},configProps,{navigationOptions:navigationOptions})));}if(typeof configurer==='object'){return(0,_objectSpread2.default)({},navigationOptions,configurer);}return navigationOptions;}var _default=function _default(routeConfigs,navigatorScreenConfig){return function(navigation,screenProps){var state=navigation.state;var route=state;(0,_invariant.default)(route.routeName&&typeof route.routeName==='string','Cannot get config because the route does not have a routeName.');var Component=(0,_getScreenForRouteName.default)(routeConfigs,route.routeName);var routeConfig=routeConfigs[route.routeName];var routeScreenConfig=routeConfig===Component?null:routeConfig.navigationOptions;var componentScreenConfig=Component.navigationOptions;var configOptions={navigation:navigation,screenProps:screenProps||{}};var outputConfig=applyConfig(navigatorScreenConfig,{},configOptions);outputConfig=applyConfig(componentScreenConfig,outputConfig,configOptions);outputConfig=applyConfig(routeScreenConfig,outputConfig,configOptions);(0,_validateScreenOptions.default)(outputConfig,route);return outputConfig;};};exports.default=_default;
//# sourceMappingURL=createConfigGetter.js.map