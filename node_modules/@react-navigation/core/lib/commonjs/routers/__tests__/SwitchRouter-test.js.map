{"version":3,"sources":["SwitchRouter-test.js"],"names":["describe","it","router","getExampleRouter","state","getStateForAction","type","NavigationActions","INIT","state2","NAVIGATE","routeName","expect","routes","index","toEqual","length","state3","resetOnBlur","SwitchActions","JUMP_TO","BACK","backBehavior","routeKeyHistory","toBeUndefined","routerHelper","ExampleRouterHelper","getCurrentState","applyAction","toMatchObject","action","subState","activeGrandChildRoute","params","foo","Screen","NestedSwitch","OtherNestedSwitch","nestedRouter","Foo","Bar","otherNestedRouter","initialRouteName","state4","activeState4","MainStack","LoginStack","Home","Profile","Form","ForgotPassword","Login","Main","config","_currentState","_router","PlainScreen","StackA","StackB","StackC","A1","A2","B1","B2","C1","C2","A","screen","path","B","C"],"mappings":"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","sourcesContent":["/* eslint react/display-name:0 */\n\nimport React from 'react';\nimport SwitchRouter from '../SwitchRouter';\nimport StackRouter from '../StackRouter';\nimport * as SwitchActions from '../SwitchActions';\nimport * as NavigationActions from '../../NavigationActions';\n\ndescribe('SwitchRouter', () => {\n  it('resets the route when unfocusing a tab by default', () => {\n    const router = getExampleRouter();\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    const state2 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'A2' },\n      state\n    );\n    expect(state2.routes[0].index).toEqual(1);\n    expect(state2.routes[0].routes.length).toEqual(2);\n\n    const state3 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'B' },\n      state2\n    );\n\n    expect(state3.routes[0].index).toEqual(0);\n    expect(state3.routes[0].routes.length).toEqual(1);\n  });\n\n  it('does not reset the route on unfocus if resetOnBlur is false', () => {\n    const router = getExampleRouter({ resetOnBlur: false });\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    const state2 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'A2' },\n      state\n    );\n    expect(state2.routes[0].index).toEqual(1);\n    expect(state2.routes[0].routes.length).toEqual(2);\n\n    const state3 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'B' },\n      state2\n    );\n\n    expect(state3.routes[0].index).toEqual(1);\n    expect(state3.routes[0].routes.length).toEqual(2);\n  });\n\n  it('ignores back by default', () => {\n    const router = getExampleRouter();\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    const state2 = router.getStateForAction(\n      { type: SwitchActions.JUMP_TO, routeName: 'B' },\n      state\n    );\n    expect(state2.index).toEqual(1);\n\n    const state3 = router.getStateForAction(\n      { type: NavigationActions.BACK },\n      state2\n    );\n\n    expect(state3.index).toEqual(1);\n  });\n\n  it('handles initialRoute backBehavior', () => {\n    const router = getExampleRouter({ backBehavior: 'initialRoute' });\n\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    expect(state.routeKeyHistory).toBeUndefined();\n\n    const state2 = router.getStateForAction(\n      { type: SwitchActions.JUMP_TO, routeName: 'B' },\n      state\n    );\n    expect(state2.index).toEqual(1);\n\n    const state3 = router.getStateForAction(\n      { type: NavigationActions.BACK },\n      state2\n    );\n\n    expect(state3.index).toEqual(0);\n  });\n\n  it('handles order backBehavior', () => {\n    const routerHelper = new ExampleRouterHelper({ backBehavior: 'order' });\n    expect(routerHelper.getCurrentState().routeKeyHistory).toBeUndefined();\n\n    expect(\n      routerHelper.applyAction({\n        type: SwitchActions.JUMP_TO,\n        routeName: 'C',\n      })\n    ).toMatchObject({ index: 2 });\n\n    expect(\n      routerHelper.applyAction({ type: NavigationActions.BACK })\n    ).toMatchObject({ index: 1 });\n\n    expect(\n      routerHelper.applyAction({ type: NavigationActions.BACK })\n    ).toMatchObject({ index: 0 });\n\n    expect(\n      routerHelper.applyAction({ type: NavigationActions.BACK })\n    ).toMatchObject({ index: 0 });\n  });\n\n  it('handles history backBehavior', () => {\n    const routerHelper = new ExampleRouterHelper({ backBehavior: 'history' });\n    expect(routerHelper.getCurrentState().routeKeyHistory).toMatchObject(['A']);\n\n    expect(\n      routerHelper.applyAction({\n        type: NavigationActions.NAVIGATE,\n        routeName: 'B',\n      })\n    ).toMatchObject({ index: 1, routeKeyHistory: ['A', 'B'] });\n\n    expect(\n      routerHelper.applyAction({\n        type: NavigationActions.NAVIGATE,\n        routeName: 'A',\n      })\n    ).toMatchObject({ index: 0, routeKeyHistory: ['B', 'A'] });\n\n    expect(\n      routerHelper.applyAction({\n        type: NavigationActions.NAVIGATE,\n        routeName: 'C',\n      })\n    ).toMatchObject({ index: 2, routeKeyHistory: ['B', 'A', 'C'] });\n\n    expect(\n      routerHelper.applyAction({\n        type: NavigationActions.NAVIGATE,\n        routeName: 'A',\n      })\n    ).toMatchObject({ index: 0, routeKeyHistory: ['B', 'C', 'A'] });\n\n    expect(\n      routerHelper.applyAction({ type: NavigationActions.BACK })\n    ).toMatchObject({ index: 2, routeKeyHistory: ['B', 'C'] });\n\n    expect(\n      routerHelper.applyAction({ type: NavigationActions.BACK })\n    ).toMatchObject({ index: 1, routeKeyHistory: ['B'] });\n\n    expect(\n      routerHelper.applyAction({ type: NavigationActions.BACK })\n    ).toMatchObject({ index: 1, routeKeyHistory: ['B'] });\n  });\n\n  it('handles nested actions', () => {\n    const router = getExampleRouter();\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    const state2 = router.getStateForAction(\n      {\n        type: NavigationActions.NAVIGATE,\n        routeName: 'B',\n        action: { type: NavigationActions.NAVIGATE, routeName: 'B2' },\n      },\n      state\n    );\n    const subState = state2.routes[state2.index];\n    const activeGrandChildRoute = subState.routes[subState.index];\n    expect(activeGrandChildRoute.routeName).toEqual('B2');\n  });\n\n  it('handles nested actions and params simultaneously', () => {\n    const router = getExampleRouter();\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    const state2 = router.getStateForAction(\n      {\n        type: NavigationActions.NAVIGATE,\n        routeName: 'B',\n        params: { foo: 'bar' },\n        action: { type: NavigationActions.NAVIGATE, routeName: 'B2' },\n      },\n      state\n    );\n    const subState = state2.routes[state2.index];\n    const activeGrandChildRoute = subState.routes[subState.index];\n    expect(subState.params.foo).toEqual('bar');\n    expect(activeGrandChildRoute.routeName).toEqual('B2');\n  });\n\n  it('order of handling navigate action is correct for nested switchrouters', () => {\n    // router = switch({ Nested: switch({ Foo, Bar }), Other: switch({ Foo }), Bar })\n    // if we are focused on Other and navigate to Bar, what should happen?\n\n    const Screen = () => <div />;\n    const NestedSwitch = () => <div />;\n    const OtherNestedSwitch = () => <div />;\n\n    let nestedRouter = SwitchRouter({ Foo: Screen, Bar: Screen });\n    let otherNestedRouter = SwitchRouter({ Foo: Screen });\n    NestedSwitch.router = nestedRouter;\n    OtherNestedSwitch.router = otherNestedRouter;\n\n    let router = SwitchRouter(\n      {\n        NestedSwitch,\n        OtherNestedSwitch,\n        Bar: Screen,\n      },\n      {\n        initialRouteName: 'OtherNestedSwitch',\n      }\n    );\n\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    expect(state.routes[state.index].routeName).toEqual('OtherNestedSwitch');\n\n    const state2 = router.getStateForAction(\n      {\n        type: NavigationActions.NAVIGATE,\n        routeName: 'Bar',\n      },\n      state\n    );\n    expect(state2.routes[state2.index].routeName).toEqual('Bar');\n\n    const state3 = router.getStateForAction(\n      {\n        type: NavigationActions.NAVIGATE,\n        routeName: 'NestedSwitch',\n      },\n      state2\n    );\n    const state4 = router.getStateForAction(\n      {\n        type: NavigationActions.NAVIGATE,\n        routeName: 'Bar',\n      },\n      state3\n    );\n    let activeState4 = state4.routes[state4.index];\n    expect(activeState4.routeName).toEqual('NestedSwitch');\n    expect(activeState4.routes[activeState4.index].routeName).toEqual('Bar');\n  });\n\n  // https://github.com/react-navigation/react-navigation.github.io/issues/117#issuecomment-385597628\n  it('order of handling navigate action is correct for nested stackrouters', () => {\n    const Screen = () => <div />;\n    const MainStack = () => <div />;\n    const LoginStack = () => <div />;\n    MainStack.router = StackRouter({ Home: Screen, Profile: Screen });\n    LoginStack.router = StackRouter({ Form: Screen, ForgotPassword: Screen });\n\n    let router = SwitchRouter(\n      {\n        Home: Screen,\n        Login: LoginStack,\n        Main: MainStack,\n      },\n      {\n        initialRouteName: 'Login',\n      }\n    );\n\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    expect(state.routes[state.index].routeName).toEqual('Login');\n\n    const state2 = router.getStateForAction(\n      {\n        type: SwitchActions.JUMP_TO,\n        routeName: 'Home',\n      },\n      state\n    );\n    expect(state2.routes[state2.index].routeName).toEqual('Home');\n  });\n});\n\n// A simple helper that makes it easier to write basic routing tests\n// As we generally want to apply one action after the other,\n// it's often convenient to manipulate a structure that keeps the router state\nclass ExampleRouterHelper {\n  constructor(config) {\n    this._router = getExampleRouter(config);\n    this._currentState = this._router.getStateForAction({\n      type: NavigationActions.INIT,\n    });\n  }\n\n  applyAction = action => {\n    this._currentState = this._router.getStateForAction(\n      action,\n      this._currentState\n    );\n    return this._currentState;\n  };\n\n  getCurrentState = () => this._currentState;\n}\n\nconst getExampleRouter = (config = {}) => {\n  const PlainScreen = () => <div />;\n  const StackA = () => <div />;\n  const StackB = () => <div />;\n  const StackC = () => <div />;\n\n  StackA.router = StackRouter({\n    A1: PlainScreen,\n    A2: PlainScreen,\n  });\n\n  StackB.router = StackRouter({\n    B1: PlainScreen,\n    B2: PlainScreen,\n  });\n\n  StackC.router = StackRouter({\n    C1: PlainScreen,\n    C2: PlainScreen,\n  });\n\n  const router = SwitchRouter(\n    {\n      A: {\n        screen: StackA,\n        path: '',\n      },\n      B: {\n        screen: StackB,\n        path: 'great/path',\n      },\n      C: {\n        screen: StackC,\n        path: 'pathC',\n      },\n    },\n    {\n      initialRouteName: 'A',\n      ...config,\n    }\n  );\n\n  return router;\n};\n"]}