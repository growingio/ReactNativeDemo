{"version":3,"sources":["Routers-test.js"],"names":["beforeEach","ROUTERS","TabRouter","StackRouter","SwitchRouter","dummyEventSubscriber","remove","Object","keys","forEach","routerName","Router","describe","it","FooView","React","Component","BarView","navigationOptions","title","BazView","navigation","state","params","id","router","Foo","screen","Bar","Baz","routes","key","routeName","expect","getScreenOptions","dispatch","addListener","toEqual","undefined","initState","getStateForAction","NavigationActions","init","initRoute","index","state0","setParams","foo","Leaf","First","First1","First2","Second","Second1","Second2","Main","TestRouter","Login","state1","type","INIT","state2","NAVIGATE","state3","state4","action","state5","FooTabNavigator","Zap","Zoo","expectedState","isTransitioning","immediate","Boo","SET_PARAMS","name","getScreen","FooStackNavigator","stateAfterCompleteTransition","StackActions","COMPLETE_TRANSITION","preserveFocus","stateAfterSetParams","PlainScreen","ScreenA","ScreenB","screenApreState","preState","comparable","result","Array","map","navigate","innerState"],"mappings":"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","sourcesContent":["/* eslint react/no-multi-comp:0, react/display-name:0 */\n\nimport React from 'react';\n\nimport StackRouter from '../StackRouter';\nimport TabRouter from '../TabRouter';\nimport SwitchRouter from '../SwitchRouter';\n\nimport * as NavigationActions from '../../NavigationActions';\nimport * as StackActions from '../StackActions';\nimport { _TESTING_ONLY_normalize_keys } from '../KeyGenerator.ts';\n\nbeforeEach(() => {\n  _TESTING_ONLY_normalize_keys();\n});\n\nconst ROUTERS = {\n  TabRouter,\n  StackRouter,\n  SwitchRouter,\n};\n\nconst dummyEventSubscriber = () => ({\n  remove: () => {},\n});\n\nObject.keys(ROUTERS).forEach(routerName => {\n  const Router = ROUTERS[routerName];\n\n  describe(`General router features - ${routerName}`, () => {\n    it(`title is configurable using navigationOptions and getScreenOptions - ${routerName}`, () => {\n      class FooView extends React.Component {\n        render() {\n          return <div />;\n        }\n      }\n      class BarView extends React.Component {\n        render() {\n          return <div />;\n        }\n        static navigationOptions = { title: 'BarTitle' };\n      }\n      class BazView extends React.Component {\n        render() {\n          return <div />;\n        }\n        static navigationOptions = ({ navigation }) => ({\n          title: `Baz-${navigation.state.params.id}`,\n        });\n      }\n      const router = Router({\n        Foo: { screen: FooView },\n        Bar: { screen: BarView },\n        Baz: { screen: BazView },\n      });\n      const routes = [\n        { key: 'A', routeName: 'Foo' },\n        { key: 'B', routeName: 'Bar' },\n        { key: 'A', routeName: 'Baz', params: { id: '123' } },\n      ];\n      expect(\n        router.getScreenOptions(\n          {\n            state: routes[0],\n            dispatch: () => false,\n            addListener: dummyEventSubscriber,\n          },\n          {}\n        ).title\n      ).toEqual(undefined);\n      expect(\n        router.getScreenOptions(\n          {\n            state: routes[1],\n            dispatch: () => false,\n            addListener: dummyEventSubscriber,\n          },\n          {}\n        ).title\n      ).toEqual('BarTitle');\n      expect(\n        router.getScreenOptions(\n          {\n            state: routes[2],\n            dispatch: () => false,\n            addListener: dummyEventSubscriber,\n          },\n          {}\n        ).title\n      ).toEqual('Baz-123');\n    });\n\n    it(`set params works in ${routerName}`, () => {\n      class FooView extends React.Component {\n        render() {\n          return <div />;\n        }\n      }\n      const router = Router({\n        Foo: { screen: FooView },\n        Bar: { screen: FooView },\n      });\n\n      const initState = router.getStateForAction(NavigationActions.init());\n      const initRoute = initState.routes[initState.index];\n      expect(initRoute.params).toEqual(undefined);\n\n      const state0 = router.getStateForAction(\n        NavigationActions.setParams({\n          params: { foo: 42 },\n          key: initRoute.key,\n        }),\n        initState\n      );\n      expect(state0.routes[state0.index].params.foo).toEqual(42);\n    });\n  });\n});\n\nit('Nested navigate behavior test', () => {\n  const Leaf = () => <div />;\n\n  const First = () => <div />;\n  First.router = StackRouter({\n    First1: Leaf,\n    First2: Leaf,\n  });\n\n  const Second = () => <div />;\n  Second.router = StackRouter({\n    Second1: Leaf,\n    Second2: Leaf,\n  });\n\n  const Main = () => <div />;\n  Main.router = StackRouter({\n    First,\n    Second,\n  });\n  const TestRouter = SwitchRouter({\n    Login: Leaf,\n    Main,\n  });\n\n  const state1 = TestRouter.getStateForAction({ type: NavigationActions.INIT });\n\n  const state2 = TestRouter.getStateForAction(\n    { type: NavigationActions.NAVIGATE, routeName: 'First' },\n    state1\n  );\n  expect(state2.index).toEqual(1);\n  expect(state2.routes[1].index).toEqual(0);\n  expect(state2.routes[1].routes[0].index).toEqual(0);\n\n  const state3 = TestRouter.getStateForAction(\n    { type: NavigationActions.NAVIGATE, routeName: 'Second2' },\n    state2\n  );\n  expect(state3.index).toEqual(1);\n  expect(state3.routes[1].index).toEqual(1); // second\n  expect(state3.routes[1].routes[1].index).toEqual(1); //second.second2\n\n  const state4 = TestRouter.getStateForAction(\n    {\n      type: NavigationActions.NAVIGATE,\n      routeName: 'First',\n      action: { type: NavigationActions.NAVIGATE, routeName: 'First2' },\n    },\n    state3,\n    true\n  );\n  expect(state4.index).toEqual(1); // main\n  expect(state4.routes[1].index).toEqual(0); // first\n  expect(state4.routes[1].routes[0].index).toEqual(1); // first2\n\n  const state5 = TestRouter.getStateForAction(\n    {\n      type: NavigationActions.NAVIGATE,\n      routeName: 'First',\n      action: { type: NavigationActions.NAVIGATE, routeName: 'First1' },\n    },\n    state3 // second.second2 is active on state3\n  );\n  expect(state5.index).toEqual(1); // main\n  expect(state5.routes[1].index).toEqual(0); // first\n  expect(state5.routes[1].routes[0].index).toEqual(0); // first.first1\n});\n\nit('Handles no-op actions with tabs within stack router', () => {\n  const BarView = () => <div />;\n  const FooTabNavigator = () => <div />;\n  FooTabNavigator.router = TabRouter({\n    Zap: { screen: BarView },\n    Zoo: { screen: BarView },\n  });\n  const TestRouter = StackRouter({\n    Foo: {\n      screen: FooTabNavigator,\n    },\n    Bar: {\n      screen: BarView,\n    },\n  });\n  const state1 = TestRouter.getStateForAction({ type: NavigationActions.INIT });\n  const state2 = TestRouter.getStateForAction({\n    type: NavigationActions.NAVIGATE,\n    routeName: 'Qux',\n  });\n  expect(state1.routes[0].key).toEqual('id-0');\n  expect(state2.routes[0].key).toEqual('id-1');\n  state1.routes[0].key = state2.routes[0].key;\n  expect(state1).toEqual(state2);\n  const state3 = TestRouter.getStateForAction(\n    { type: NavigationActions.NAVIGATE, routeName: 'Zap' },\n    state2\n  );\n  expect(state2).toEqual(state3);\n});\n\nit('Handles deep action', () => {\n  const BarView = () => <div />;\n  const FooTabNavigator = () => <div />;\n  FooTabNavigator.router = TabRouter({\n    Zap: { screen: BarView },\n    Zoo: { screen: BarView },\n  });\n  const TestRouter = StackRouter({\n    Bar: { screen: BarView },\n    Foo: { screen: FooTabNavigator },\n  });\n  const state1 = TestRouter.getStateForAction({ type: NavigationActions.INIT });\n  const expectedState = {\n    index: 0,\n    isTransitioning: false,\n    key: 'StackRouterRoot',\n    routes: [\n      {\n        key: 'id-0',\n        routeName: 'Bar',\n      },\n    ],\n  };\n  expect(state1).toEqual(expectedState);\n  const state2 = TestRouter.getStateForAction(\n    {\n      type: NavigationActions.NAVIGATE,\n      routeName: 'Foo',\n      immediate: true,\n      action: { type: NavigationActions.NAVIGATE, routeName: 'Zoo' },\n    },\n    state1\n  );\n  expect(state2 && state2.index).toEqual(1);\n  expect(state2 && state2.routes[1].index).toEqual(1);\n});\n\nit('Handles the navigate action with params', () => {\n  const FooTabNavigator = () => <div />;\n  FooTabNavigator.router = TabRouter({\n    Baz: { screen: () => <div /> },\n    Boo: { screen: () => <div /> },\n  });\n\n  const TestRouter = StackRouter({\n    Foo: { screen: () => <div /> },\n    Bar: { screen: FooTabNavigator },\n  });\n  const state = TestRouter.getStateForAction({ type: NavigationActions.INIT });\n  const state2 = TestRouter.getStateForAction(\n    {\n      type: NavigationActions.NAVIGATE,\n      immediate: true,\n      routeName: 'Bar',\n      params: { foo: '42' },\n    },\n    state\n  );\n  expect(state2 && state2.routes[1].params).toEqual({ foo: '42' });\n  expect(state2 && state2.routes[1].routes).toEqual([\n    {\n      key: 'Baz',\n      routeName: 'Baz',\n      params: { foo: '42' },\n    },\n    {\n      key: 'Boo',\n      routeName: 'Boo',\n      params: { foo: '42' },\n    },\n  ]);\n});\n\nit('Handles the setParams action', () => {\n  const FooTabNavigator = () => <div />;\n  FooTabNavigator.router = TabRouter({\n    Baz: { screen: () => <div /> },\n  });\n  const TestRouter = StackRouter({\n    Foo: { screen: FooTabNavigator },\n    Bar: { screen: () => <div /> },\n  });\n  const state = TestRouter.getStateForAction({ type: NavigationActions.INIT });\n  const state2 = TestRouter.getStateForAction(\n    {\n      type: NavigationActions.SET_PARAMS,\n      params: { name: 'foobar' },\n      key: 'Baz',\n    },\n    state\n  );\n  expect(state2 && state2.index).toEqual(0);\n  expect(state2 && state2.routes[0].routes).toEqual([\n    {\n      key: 'Baz',\n      routeName: 'Baz',\n      params: { name: 'foobar' },\n    },\n  ]);\n});\n\nit('Supports lazily-evaluated getScreen', () => {\n  const BarView = () => <div />;\n  const FooTabNavigator = () => <div />;\n  FooTabNavigator.router = TabRouter({\n    Zap: { screen: BarView },\n    Zoo: { screen: BarView },\n  });\n  const TestRouter = StackRouter({\n    Foo: {\n      screen: FooTabNavigator,\n    },\n    Bar: {\n      getScreen: () => BarView,\n    },\n  });\n  const state1 = TestRouter.getStateForAction({ type: NavigationActions.INIT });\n  const state2 = TestRouter.getStateForAction({\n    type: NavigationActions.NAVIGATE,\n    immediate: true,\n    routeName: 'Qux',\n  });\n  expect(state1.routes[0].key).toEqual('id-0');\n  expect(state2.routes[0].key).toEqual('id-1');\n  state1.routes[0].key = state2.routes[0].key;\n  expect(state1).toEqual(state2);\n  const state3 = TestRouter.getStateForAction(\n    {\n      type: NavigationActions.NAVIGATE,\n      immediate: true,\n      routeName: 'Zap',\n    },\n    state2\n  );\n  expect(state2).toEqual(state3);\n});\n\nit('Does not switch tab index when TabRouter child handles COMPLETE_NAVIGATION or SET_PARAMS', () => {\n  const FooStackNavigator = () => <div />;\n  const BarView = () => <div />;\n  FooStackNavigator.router = StackRouter({\n    Foo: {\n      screen: BarView,\n    },\n    Bar: {\n      screen: BarView,\n    },\n  });\n\n  const TestRouter = TabRouter({\n    Zap: { screen: FooStackNavigator },\n    Zoo: { screen: FooStackNavigator },\n  });\n\n  const state1 = TestRouter.getStateForAction({ type: NavigationActions.INIT });\n\n  // Navigate to the second screen in the first tab\n  const state2 = TestRouter.getStateForAction(\n    {\n      type: NavigationActions.NAVIGATE,\n      routeName: 'Bar',\n    },\n    state1\n  );\n\n  // Switch tabs\n  const state3 = TestRouter.getStateForAction(\n    {\n      type: NavigationActions.NAVIGATE,\n      routeName: 'Zoo',\n    },\n    state2\n  );\n\n  const stateAfterCompleteTransition = TestRouter.getStateForAction(\n    {\n      type: StackActions.COMPLETE_TRANSITION,\n      preserveFocus: true,\n      key: state2.routes[0].key,\n    },\n    state3\n  );\n  const stateAfterSetParams = TestRouter.getStateForAction(\n    {\n      type: NavigationActions.SET_PARAMS,\n      preserveFocus: true,\n      key: state1.routes[0].routes[0].key,\n      params: { key: 'value' },\n    },\n    state3\n  );\n\n  expect(stateAfterCompleteTransition.index).toEqual(1);\n  expect(stateAfterSetParams.index).toEqual(1);\n});\n\nit('Inner actions are only unpacked if the current tab matches', () => {\n  const PlainScreen = () => <div />;\n  const ScreenA = () => <div />;\n  const ScreenB = () => <div />;\n  ScreenB.router = StackRouter({\n    Baz: { screen: PlainScreen },\n    Zoo: { screen: PlainScreen },\n  });\n  ScreenA.router = StackRouter({\n    Bar: { screen: PlainScreen },\n    Boo: { screen: ScreenB },\n  });\n  const TestRouter = TabRouter({\n    Foo: { screen: ScreenA },\n  });\n  const screenApreState = {\n    index: 0,\n    key: 'Init',\n    isTransitioning: false,\n    routeName: 'Foo',\n    routes: [{ key: 'Init', routeName: 'Bar' }],\n  };\n  const preState = {\n    index: 0,\n    isTransitioning: false,\n    routes: [screenApreState],\n  };\n\n  const comparable = state => {\n    let result = {};\n    if (typeof state.routeName === 'string') {\n      result = { ...result, routeName: state.routeName };\n    }\n    if (state.routes instanceof Array) {\n      result = {\n        ...result,\n        routes: state.routes.map(comparable),\n      };\n    }\n    return result;\n  };\n\n  const action = NavigationActions.navigate({\n    routeName: 'Boo',\n    action: NavigationActions.navigate({ routeName: 'Zoo' }),\n  });\n\n  const expectedState = ScreenA.router.getStateForAction(\n    action,\n    screenApreState\n  );\n  const state = TestRouter.getStateForAction(action, preState);\n  const innerState = state ? state.routes[0] : state;\n\n  expect(expectedState && comparable(expectedState)).toEqual(\n    innerState && comparable(innerState)\n  );\n});\n"]}