{"version":3,"sources":["validateRouteConfigMap-test.js"],"names":["ListScreen","ProfileNavigator","router","list","screen","describe","it","invalidMap","Home","undefined","expect","toThrowErrorMatchingSnapshot","foo","getScreen","validMap","Chat"],"mappings":"mFAAA,oDAEA,yFACA,mE,uHAEA,GAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAM,oFAAN,EAAnB,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAM,oFAAN,EAAzB,CACAA,gBAAgB,CAACC,MAAjB,CAA0B,yBAAY,CACpCC,IAAI,CAAE,CACJC,MAAM,CAAEJ,UADJ,CAD8B,CAAZ,CAA1B,CAMAK,QAAQ,CAAC,wBAAD,CAA2B,UAAM,CACvCC,EAAE,CAAC,4BAAD,CAA+B,UAAM,CACrC,GAAMC,CAAAA,UAAU,CAAG,CACjBC,IAAI,CAAEC,SADW,CAAnB,CAGAC,MAAM,CAAC,iBACL,oCAAuBH,UAAvB,CADK,EAAD,CAAN,CAEEI,4BAFF,GAGD,CAPC,CAAF,CAQAL,EAAE,CAAC,uBAAD,CAA0B,UAAM,CAChC,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CACAG,MAAM,CAAC,iBACL,oCAAuBH,UAAvB,CADK,EAAD,CAAN,CAEEI,4BAFF,GAGD,CALC,CAAF,CAMAL,EAAE,CAAC,qBAAD,CAAwB,UAAM,CAC9B,GAAMC,CAAAA,UAAU,CAAG,CACjBC,IAAI,CAAE,CACJI,GAAG,CAAE,KADD,CADW,CAAnB,CAKAF,MAAM,CAAC,iBACL,oCAAuBH,UAAvB,CADK,EAAD,CAAN,CAEEI,4BAFF,GAGD,CATC,CAAF,CAUAL,EAAE,CAAC,gDAAD,CAAmD,UAAM,CACzD,GAAMC,CAAAA,UAAU,CAAG,CACjBC,IAAI,CAAE,CACJJ,MAAM,CAAEJ,UADJ,CAEJa,SAAS,CAAE,2BAAMb,CAAAA,UAAN,EAFP,CADW,CAAnB,CAMAU,MAAM,CAAC,iBACL,oCAAuBH,UAAvB,CADK,EAAD,CAAN,CAEEI,4BAFF,GAGD,CAVC,CAAF,CAWAL,EAAE,CAAC,4BAAD,CAA+B,UAAM,CACrC,GAAMQ,CAAAA,QAAQ,CAAG,CACfN,IAAI,CAAE,CACJJ,MAAM,CAAEH,gBADJ,CADS,CAIfc,IAAI,CAAEf,UAJS,CAAjB,CAMA,oCAAuBc,QAAvB,EACD,CARC,CAAF,CASD,CA7CO,CAAR","sourcesContent":["import React from 'react';\n\nimport validateRouteConfigMap from '../validateRouteConfigMap';\nimport StackRouter from '../StackRouter';\n\nconst ListScreen = () => <div />;\n\nconst ProfileNavigator = () => <div />;\nProfileNavigator.router = StackRouter({\n  list: {\n    screen: ListScreen,\n  },\n});\n\ndescribe('validateRouteConfigMap', () => {\n  it('Fails on empty bare screen', () => {\n    const invalidMap = {\n      Home: undefined,\n    };\n    expect(() =>\n      validateRouteConfigMap(invalidMap)\n    ).toThrowErrorMatchingSnapshot();\n  });\n  it('Fails on empty config', () => {\n    const invalidMap = {};\n    expect(() =>\n      validateRouteConfigMap(invalidMap)\n    ).toThrowErrorMatchingSnapshot();\n  });\n  it('Fails on bad object', () => {\n    const invalidMap = {\n      Home: {\n        foo: 'bar',\n      },\n    };\n    expect(() =>\n      validateRouteConfigMap(invalidMap)\n    ).toThrowErrorMatchingSnapshot();\n  });\n  it('Fails if both screen and getScreen are defined', () => {\n    const invalidMap = {\n      Home: {\n        screen: ListScreen,\n        getScreen: () => ListScreen,\n      },\n    };\n    expect(() =>\n      validateRouteConfigMap(invalidMap)\n    ).toThrowErrorMatchingSnapshot();\n  });\n  it('Succeeds on a valid config', () => {\n    const validMap = {\n      Home: {\n        screen: ProfileNavigator,\n      },\n      Chat: ListScreen,\n    };\n    validateRouteConfigMap(validMap);\n  });\n});\n"]}