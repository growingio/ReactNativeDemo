var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");var _objectSpread2=_interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _react=_interopRequireDefault(require("react"));var _StackRouter=_interopRequireDefault(require("../StackRouter"));var _TabRouter=_interopRequireDefault(require("../TabRouter"));var _SwitchRouter=_interopRequireDefault(require("../SwitchRouter"));var NavigationActions=_interopRequireWildcard(require("../../NavigationActions"));var StackActions=_interopRequireWildcard(require("../StackActions"));var _KeyGenerator=require("../KeyGenerator.ts");var _jsxFileName="/Users/brentvatne/coding/react-navigation-core/src/routers/__tests__/Routers-test.js";beforeEach(function(){(0,_KeyGenerator._TESTING_ONLY_normalize_keys)();});var ROUTERS={TabRouter:_TabRouter.default,StackRouter:_StackRouter.default,SwitchRouter:_SwitchRouter.default};var dummyEventSubscriber=function dummyEventSubscriber(){return{remove:function remove(){}};};Object.keys(ROUTERS).forEach(function(routerName){var Router=ROUTERS[routerName];describe("General router features - "+routerName,function(){it("title is configurable using navigationOptions and getScreenOptions - "+routerName,function(){var FooView=function(_React$Component){(0,_inherits2.default)(FooView,_React$Component);function FooView(){(0,_classCallCheck2.default)(this,FooView);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(FooView).apply(this,arguments));}(0,_createClass2.default)(FooView,[{key:"render",value:function render(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:34}});}}]);return FooView;}(_react.default.Component);var BarView=function(_React$Component2){(0,_inherits2.default)(BarView,_React$Component2);function BarView(){(0,_classCallCheck2.default)(this,BarView);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(BarView).apply(this,arguments));}(0,_createClass2.default)(BarView,[{key:"render",value:function render(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:39}});}}]);return BarView;}(_react.default.Component);BarView.navigationOptions={title:'BarTitle'};var BazView=function(_React$Component3){(0,_inherits2.default)(BazView,_React$Component3);function BazView(){(0,_classCallCheck2.default)(this,BazView);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(BazView).apply(this,arguments));}(0,_createClass2.default)(BazView,[{key:"render",value:function render(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:45}});}}]);return BazView;}(_react.default.Component);BazView.navigationOptions=function(_ref){var navigation=_ref.navigation;return{title:"Baz-"+navigation.state.params.id};};var router=Router({Foo:{screen:FooView},Bar:{screen:BarView},Baz:{screen:BazView}});var routes=[{key:'A',routeName:'Foo'},{key:'B',routeName:'Bar'},{key:'A',routeName:'Baz',params:{id:'123'}}];expect(router.getScreenOptions({state:routes[0],dispatch:function dispatch(){return false;},addListener:dummyEventSubscriber},{}).title).toEqual(undefined);expect(router.getScreenOptions({state:routes[1],dispatch:function dispatch(){return false;},addListener:dummyEventSubscriber},{}).title).toEqual('BarTitle');expect(router.getScreenOptions({state:routes[2],dispatch:function dispatch(){return false;},addListener:dummyEventSubscriber},{}).title).toEqual('Baz-123');});it("set params works in "+routerName,function(){var FooView=function(_React$Component4){(0,_inherits2.default)(FooView,_React$Component4);function FooView(){(0,_classCallCheck2.default)(this,FooView);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(FooView).apply(this,arguments));}(0,_createClass2.default)(FooView,[{key:"render",value:function render(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:96}});}}]);return FooView;}(_react.default.Component);var router=Router({Foo:{screen:FooView},Bar:{screen:FooView}});var initState=router.getStateForAction(NavigationActions.init());var initRoute=initState.routes[initState.index];expect(initRoute.params).toEqual(undefined);var state0=router.getStateForAction(NavigationActions.setParams({params:{foo:42},key:initRoute.key}),initState);expect(state0.routes[state0.index].params.foo).toEqual(42);});});});it('Nested navigate behavior test',function(){var Leaf=function Leaf(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:121}});};var First=function First(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:123}});};First.router=(0,_StackRouter.default)({First1:Leaf,First2:Leaf});var Second=function Second(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:129}});};Second.router=(0,_StackRouter.default)({Second1:Leaf,Second2:Leaf});var Main=function Main(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:135}});};Main.router=(0,_StackRouter.default)({First:First,Second:Second});var TestRouter=(0,_SwitchRouter.default)({Login:Leaf,Main:Main});var state1=TestRouter.getStateForAction({type:NavigationActions.INIT});var state2=TestRouter.getStateForAction({type:NavigationActions.NAVIGATE,routeName:'First'},state1);expect(state2.index).toEqual(1);expect(state2.routes[1].index).toEqual(0);expect(state2.routes[1].routes[0].index).toEqual(0);var state3=TestRouter.getStateForAction({type:NavigationActions.NAVIGATE,routeName:'Second2'},state2);expect(state3.index).toEqual(1);expect(state3.routes[1].index).toEqual(1);expect(state3.routes[1].routes[1].index).toEqual(1);var state4=TestRouter.getStateForAction({type:NavigationActions.NAVIGATE,routeName:'First',action:{type:NavigationActions.NAVIGATE,routeName:'First2'}},state3,true);expect(state4.index).toEqual(1);expect(state4.routes[1].index).toEqual(0);expect(state4.routes[1].routes[0].index).toEqual(1);var state5=TestRouter.getStateForAction({type:NavigationActions.NAVIGATE,routeName:'First',action:{type:NavigationActions.NAVIGATE,routeName:'First1'}},state3);expect(state5.index).toEqual(1);expect(state5.routes[1].index).toEqual(0);expect(state5.routes[1].routes[0].index).toEqual(0);});it('Handles no-op actions with tabs within stack router',function(){var BarView=function BarView(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:190}});};var FooTabNavigator=function FooTabNavigator(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:191}});};FooTabNavigator.router=(0,_TabRouter.default)({Zap:{screen:BarView},Zoo:{screen:BarView}});var TestRouter=(0,_StackRouter.default)({Foo:{screen:FooTabNavigator},Bar:{screen:BarView}});var state1=TestRouter.getStateForAction({type:NavigationActions.INIT});var state2=TestRouter.getStateForAction({type:NavigationActions.NAVIGATE,routeName:'Qux'});expect(state1.routes[0].key).toEqual('id-0');expect(state2.routes[0].key).toEqual('id-1');state1.routes[0].key=state2.routes[0].key;expect(state1).toEqual(state2);var state3=TestRouter.getStateForAction({type:NavigationActions.NAVIGATE,routeName:'Zap'},state2);expect(state2).toEqual(state3);});it('Handles deep action',function(){var BarView=function BarView(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:221}});};var FooTabNavigator=function FooTabNavigator(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:222}});};FooTabNavigator.router=(0,_TabRouter.default)({Zap:{screen:BarView},Zoo:{screen:BarView}});var TestRouter=(0,_StackRouter.default)({Bar:{screen:BarView},Foo:{screen:FooTabNavigator}});var state1=TestRouter.getStateForAction({type:NavigationActions.INIT});var expectedState={index:0,isTransitioning:false,key:'StackRouterRoot',routes:[{key:'id-0',routeName:'Bar'}]};expect(state1).toEqual(expectedState);var state2=TestRouter.getStateForAction({type:NavigationActions.NAVIGATE,routeName:'Foo',immediate:true,action:{type:NavigationActions.NAVIGATE,routeName:'Zoo'}},state1);expect(state2&&state2.index).toEqual(1);expect(state2&&state2.routes[1].index).toEqual(1);});it('Handles the navigate action with params',function(){var FooTabNavigator=function FooTabNavigator(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:258}});};FooTabNavigator.router=(0,_TabRouter.default)({Baz:{screen:function screen(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:260}});}},Boo:{screen:function screen(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:261}});}}});var TestRouter=(0,_StackRouter.default)({Foo:{screen:function screen(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:265}});}},Bar:{screen:FooTabNavigator}});var state=TestRouter.getStateForAction({type:NavigationActions.INIT});var state2=TestRouter.getStateForAction({type:NavigationActions.NAVIGATE,immediate:true,routeName:'Bar',params:{foo:'42'}},state);expect(state2&&state2.routes[1].params).toEqual({foo:'42'});expect(state2&&state2.routes[1].routes).toEqual([{key:'Baz',routeName:'Baz',params:{foo:'42'}},{key:'Boo',routeName:'Boo',params:{foo:'42'}}]);});it('Handles the setParams action',function(){var FooTabNavigator=function FooTabNavigator(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:294}});};FooTabNavigator.router=(0,_TabRouter.default)({Baz:{screen:function screen(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:296}});}}});var TestRouter=(0,_StackRouter.default)({Foo:{screen:FooTabNavigator},Bar:{screen:function screen(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:300}});}}});var state=TestRouter.getStateForAction({type:NavigationActions.INIT});var state2=TestRouter.getStateForAction({type:NavigationActions.SET_PARAMS,params:{name:'foobar'},key:'Baz'},state);expect(state2&&state2.index).toEqual(0);expect(state2&&state2.routes[0].routes).toEqual([{key:'Baz',routeName:'Baz',params:{name:'foobar'}}]);});it('Supports lazily-evaluated getScreen',function(){var BarView=function BarView(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:322}});};var FooTabNavigator=function FooTabNavigator(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:323}});};FooTabNavigator.router=(0,_TabRouter.default)({Zap:{screen:BarView},Zoo:{screen:BarView}});var TestRouter=(0,_StackRouter.default)({Foo:{screen:FooTabNavigator},Bar:{getScreen:function getScreen(){return BarView;}}});var state1=TestRouter.getStateForAction({type:NavigationActions.INIT});var state2=TestRouter.getStateForAction({type:NavigationActions.NAVIGATE,immediate:true,routeName:'Qux'});expect(state1.routes[0].key).toEqual('id-0');expect(state2.routes[0].key).toEqual('id-1');state1.routes[0].key=state2.routes[0].key;expect(state1).toEqual(state2);var state3=TestRouter.getStateForAction({type:NavigationActions.NAVIGATE,immediate:true,routeName:'Zap'},state2);expect(state2).toEqual(state3);});it('Does not switch tab index when TabRouter child handles COMPLETE_NAVIGATION or SET_PARAMS',function(){var FooStackNavigator=function FooStackNavigator(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:358}});};var BarView=function BarView(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:359}});};FooStackNavigator.router=(0,_StackRouter.default)({Foo:{screen:BarView},Bar:{screen:BarView}});var TestRouter=(0,_TabRouter.default)({Zap:{screen:FooStackNavigator},Zoo:{screen:FooStackNavigator}});var state1=TestRouter.getStateForAction({type:NavigationActions.INIT});var state2=TestRouter.getStateForAction({type:NavigationActions.NAVIGATE,routeName:'Bar'},state1);var state3=TestRouter.getStateForAction({type:NavigationActions.NAVIGATE,routeName:'Zoo'},state2);var stateAfterCompleteTransition=TestRouter.getStateForAction({type:StackActions.COMPLETE_TRANSITION,preserveFocus:true,key:state2.routes[0].key},state3);var stateAfterSetParams=TestRouter.getStateForAction({type:NavigationActions.SET_PARAMS,preserveFocus:true,key:state1.routes[0].routes[0].key,params:{key:'value'}},state3);expect(stateAfterCompleteTransition.index).toEqual(1);expect(stateAfterSetParams.index).toEqual(1);});it('Inner actions are only unpacked if the current tab matches',function(){var PlainScreen=function PlainScreen(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:417}});};var ScreenA=function ScreenA(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:418}});};var ScreenB=function ScreenB(){return _react.default.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:419}});};ScreenB.router=(0,_StackRouter.default)({Baz:{screen:PlainScreen},Zoo:{screen:PlainScreen}});ScreenA.router=(0,_StackRouter.default)({Bar:{screen:PlainScreen},Boo:{screen:ScreenB}});var TestRouter=(0,_TabRouter.default)({Foo:{screen:ScreenA}});var screenApreState={index:0,key:'Init',isTransitioning:false,routeName:'Foo',routes:[{key:'Init',routeName:'Bar'}]};var preState={index:0,isTransitioning:false,routes:[screenApreState]};var comparable=function comparable(state){var result={};if(typeof state.routeName==='string'){result=(0,_objectSpread2.default)({},result,{routeName:state.routeName});}if(state.routes instanceof Array){result=(0,_objectSpread2.default)({},result,{routes:state.routes.map(comparable)});}return result;};var action=NavigationActions.navigate({routeName:'Boo',action:NavigationActions.navigate({routeName:'Zoo'})});var expectedState=ScreenA.router.getStateForAction(action,screenApreState);var state=TestRouter.getStateForAction(action,preState);var innerState=state?state.routes[0]:state;expect(expectedState&&comparable(expectedState)).toEqual(innerState&&comparable(innerState));});
//# sourceMappingURL=Routers-test.js.map