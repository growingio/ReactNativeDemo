{"version":3,"sources":["NavigationActions-test.js"],"names":["describe","params","foo","navigateAction","NavigationActions","navigate","routeName","it","expect","back","toEqual","type","BACK","key","init","INIT","NAVIGATE","action","setParams","SET_PARAMS","preserveFocus"],"mappings":"qFAAA,+EAEAA,QAAQ,CAAC,4BAAD,CAA+B,UAAM,CAC3C,GAAMC,CAAAA,MAAM,CAAG,CAAEC,GAAG,CAAE,KAAP,CAAf,CACA,GAAMC,CAAAA,cAAc,CAAGC,iBAAiB,CAACC,QAAlB,CAA2B,CAAEC,SAAS,CAAE,SAAb,CAA3B,CAAvB,CAEAC,EAAE,CAAC,8BAAD,CAAiC,UAAM,CACvCC,MAAM,CAACJ,iBAAiB,CAACK,IAAlB,EAAD,CAAN,CAAiCC,OAAjC,CAAyC,CAAEC,IAAI,CAAEP,iBAAiB,CAACQ,IAA1B,CAAzC,EACAJ,MAAM,CAACJ,iBAAiB,CAACK,IAAlB,CAAuB,CAAEI,GAAG,CAAE,MAAP,CAAvB,CAAD,CAAN,CAAgDH,OAAhD,CAAwD,CACtDC,IAAI,CAAEP,iBAAiB,CAACQ,IAD8B,CAEtDC,GAAG,CAAE,MAFiD,CAAxD,EAID,CANC,CAAF,CAQAN,EAAE,CAAC,8BAAD,CAAiC,UAAM,CACvCC,MAAM,CAACJ,iBAAiB,CAACU,IAAlB,EAAD,CAAN,CAAiCJ,OAAjC,CAAyC,CAAEC,IAAI,CAAEP,iBAAiB,CAACW,IAA1B,CAAzC,EACAP,MAAM,CAACJ,iBAAiB,CAACU,IAAlB,CAAuB,CAAEb,MAAM,CAANA,MAAF,CAAvB,CAAD,CAAN,CAA2CS,OAA3C,CAAmD,CACjDC,IAAI,CAAEP,iBAAiB,CAACW,IADyB,CAEjDd,MAAM,CAANA,MAFiD,CAAnD,EAID,CANC,CAAF,CAQAM,EAAE,CAAC,kCAAD,CAAqC,UAAM,CAC3CC,MAAM,CAACJ,iBAAiB,CAACC,QAAlB,CAA2B,CAAEC,SAAS,CAAE,MAAb,CAA3B,CAAD,CAAN,CAA0DI,OAA1D,CAAkE,CAChEC,IAAI,CAAEP,iBAAiB,CAACY,QADwC,CAEhEV,SAAS,CAAE,MAFqD,CAAlE,EAIAE,MAAM,CACJJ,iBAAiB,CAACC,QAAlB,CAA2B,CACzBC,SAAS,CAAE,MADc,CAEzBL,MAAM,CAANA,MAFyB,CAGzBgB,MAAM,CAAEd,cAHiB,CAA3B,CADI,CAAN,CAMEO,OANF,CAMU,CACRC,IAAI,CAAEP,iBAAiB,CAACY,QADhB,CAERV,SAAS,CAAE,MAFH,CAGRL,MAAM,CAANA,MAHQ,CAIRgB,MAAM,CAAE,CACNN,IAAI,CAAEP,iBAAiB,CAACY,QADlB,CAENV,SAAS,CAAE,SAFL,CAJA,CANV,EAeD,CApBC,CAAF,CAsBAC,EAAE,CAAC,mCAAD,CAAsC,UAAM,CAC5CC,MAAM,CACJJ,iBAAiB,CAACc,SAAlB,CAA4B,CAC1BL,GAAG,CAAE,MADqB,CAE1BZ,MAAM,CAANA,MAF0B,CAA5B,CADI,CAAN,CAKES,OALF,CAKU,CACRC,IAAI,CAAEP,iBAAiB,CAACe,UADhB,CAERN,GAAG,CAAE,MAFG,CAGRO,aAAa,CAAE,IAHP,CAIRnB,MAAM,CAANA,MAJQ,CALV,EAWD,CAZC,CAAF,CAaD,CAvDO,CAAR","sourcesContent":["import * as NavigationActions from '../NavigationActions';\n\ndescribe('generic navigation actions', () => {\n  const params = { foo: 'bar' };\n  const navigateAction = NavigationActions.navigate({ routeName: 'another' });\n\n  it('exports back action and type', () => {\n    expect(NavigationActions.back()).toEqual({ type: NavigationActions.BACK });\n    expect(NavigationActions.back({ key: 'test' })).toEqual({\n      type: NavigationActions.BACK,\n      key: 'test',\n    });\n  });\n\n  it('exports init action and type', () => {\n    expect(NavigationActions.init()).toEqual({ type: NavigationActions.INIT });\n    expect(NavigationActions.init({ params })).toEqual({\n      type: NavigationActions.INIT,\n      params,\n    });\n  });\n\n  it('exports navigate action and type', () => {\n    expect(NavigationActions.navigate({ routeName: 'test' })).toEqual({\n      type: NavigationActions.NAVIGATE,\n      routeName: 'test',\n    });\n    expect(\n      NavigationActions.navigate({\n        routeName: 'test',\n        params,\n        action: navigateAction,\n      })\n    ).toEqual({\n      type: NavigationActions.NAVIGATE,\n      routeName: 'test',\n      params,\n      action: {\n        type: NavigationActions.NAVIGATE,\n        routeName: 'another',\n      },\n    });\n  });\n\n  it('exports setParams action and type', () => {\n    expect(\n      NavigationActions.setParams({\n        key: 'test',\n        params,\n      })\n    ).toEqual({\n      type: NavigationActions.SET_PARAMS,\n      key: 'test',\n      preserveFocus: true,\n      params,\n    });\n  });\n});\n"]}