{"version":3,"sources":["NavigationEvents-test.js"],"names":["createPropListener","jest","fn","createEventListenersProp","onWillFocus","onDidFocus","onWillBlur","onDidBlur","createTestNavigationAndHelpers","NavigationListenersAPI","listeners","willFocus","didFocus","willBlur","didBlur","add","eventName","handler","push","remove","filter","h","get","call","forEach","listener","navigation","addListener","describe","it","component","renderer","create","expect","length","toBe","unmount","eventListenerProps","checkPropListenerIsCalled","propName","toHaveBeenCalledTimes","update","Error","latestEventListenerProps","checkLatestPropListenerCalled"],"mappings":"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","sourcesContent":["import React from 'react';\nimport renderer from 'react-test-renderer';\nimport NavigationEvents from '../NavigationEvents';\nimport NavigationContext from '../NavigationContext';\n\nconst createPropListener = () => jest.fn();\n\n// An easy way to create the 4 listeners prop\nconst createEventListenersProp = () => ({\n  onWillFocus: createPropListener(),\n  onDidFocus: createPropListener(),\n  onWillBlur: createPropListener(),\n  onDidBlur: createPropListener(),\n});\n\nconst createTestNavigationAndHelpers = () => {\n  const NavigationListenersAPI = (() => {\n    let listeners = {\n      willFocus: [],\n      didFocus: [],\n      willBlur: [],\n      didBlur: [],\n    };\n    return {\n      add: (eventName, handler) => {\n        listeners[eventName].push(handler);\n      },\n      remove: (eventName, handler) => {\n        listeners[eventName] = listeners[eventName].filter(h => h !== handler);\n      },\n      get: eventName => {\n        return listeners[eventName];\n      },\n      call: eventName => {\n        listeners[eventName].forEach(listener => listener());\n      },\n    };\n  })();\n\n  const navigation = {\n    addListener: jest.fn((eventName, handler) => {\n      NavigationListenersAPI.add(eventName, handler);\n      return {\n        remove: () => NavigationListenersAPI.remove(eventName, handler),\n      };\n    }),\n  };\n\n  return {\n    navigation,\n    NavigationListenersAPI,\n  };\n};\n\ndescribe('NavigationEvents', () => {\n  it('add all listeners on mount and remove them on unmount, even without any event prop provided (see #5058)', () => {\n    const {\n      navigation,\n      NavigationListenersAPI,\n    } = createTestNavigationAndHelpers();\n\n    const component = renderer.create(\n      <NavigationEvents navigation={navigation} />\n    );\n    expect(NavigationListenersAPI.get('willFocus').length).toBe(1);\n    expect(NavigationListenersAPI.get('didFocus').length).toBe(1);\n    expect(NavigationListenersAPI.get('willBlur').length).toBe(1);\n    expect(NavigationListenersAPI.get('didBlur').length).toBe(1);\n\n    component.unmount();\n    expect(NavigationListenersAPI.get('willFocus').length).toBe(0);\n    expect(NavigationListenersAPI.get('didFocus').length).toBe(0);\n    expect(NavigationListenersAPI.get('willBlur').length).toBe(0);\n    expect(NavigationListenersAPI.get('didBlur').length).toBe(0);\n  });\n\n  it('support context-provided navigation', () => {\n    const {\n      navigation,\n      NavigationListenersAPI,\n    } = createTestNavigationAndHelpers();\n    const component = renderer.create(\n      <NavigationContext.Provider value={navigation}>\n        <NavigationEvents />\n      </NavigationContext.Provider>\n    );\n\n    expect(NavigationListenersAPI.get('willFocus').length).toBe(1);\n    expect(NavigationListenersAPI.get('didFocus').length).toBe(1);\n    expect(NavigationListenersAPI.get('willBlur').length).toBe(1);\n    expect(NavigationListenersAPI.get('didBlur').length).toBe(1);\n\n    component.unmount();\n    expect(NavigationListenersAPI.get('willFocus').length).toBe(0);\n    expect(NavigationListenersAPI.get('didFocus').length).toBe(0);\n    expect(NavigationListenersAPI.get('willBlur').length).toBe(0);\n    expect(NavigationListenersAPI.get('didBlur').length).toBe(0);\n  });\n\n  it('wire props listeners to navigation listeners', () => {\n    const {\n      navigation,\n      NavigationListenersAPI,\n    } = createTestNavigationAndHelpers();\n\n    const eventListenerProps = createEventListenersProp();\n    renderer.create(\n      <NavigationEvents navigation={navigation} {...eventListenerProps} />\n    );\n\n    const checkPropListenerIsCalled = (eventName, propName) => {\n      expect(eventListenerProps[propName]).toHaveBeenCalledTimes(0);\n      NavigationListenersAPI.call(eventName);\n      expect(eventListenerProps[propName]).toHaveBeenCalledTimes(1);\n    };\n\n    checkPropListenerIsCalled('willFocus', 'onWillFocus');\n    checkPropListenerIsCalled('didFocus', 'onDidFocus');\n    checkPropListenerIsCalled('willBlur', 'onWillBlur');\n    checkPropListenerIsCalled('didBlur', 'onDidBlur');\n  });\n\n  it('wire latest props listener to navigation listeners on updates (support closure/arrow functions update)', () => {\n    const {\n      navigation,\n      NavigationListenersAPI,\n    } = createTestNavigationAndHelpers();\n\n    const component = renderer.create(\n      <NavigationEvents\n        navigation={navigation}\n        {...createEventListenersProp()}\n      />\n    );\n\n    component.update(\n      <NavigationEvents\n        navigation={navigation}\n        onWillBlur={() => {\n          throw new Error('should not be called');\n        }}\n        onDidFocus={() => {\n          throw new Error('should not be called');\n        }}\n      />\n    );\n\n    component.update(\n      <NavigationEvents\n        navigation={navigation}\n        {...createEventListenersProp()}\n      />\n    );\n\n    const latestEventListenerProps = createEventListenersProp();\n    component.update(\n      <NavigationEvents navigation={navigation} {...latestEventListenerProps} />\n    );\n\n    const checkLatestPropListenerCalled = (eventName, propName) => {\n      expect(latestEventListenerProps[propName]).toHaveBeenCalledTimes(0);\n      NavigationListenersAPI.call(eventName);\n      expect(latestEventListenerProps[propName]).toHaveBeenCalledTimes(1);\n    };\n\n    checkLatestPropListenerCalled('willFocus', 'onWillFocus');\n    checkLatestPropListenerCalled('didFocus', 'onDidFocus');\n    checkLatestPropListenerCalled('willBlur', 'onWillBlur');\n    checkLatestPropListenerCalled('didBlur', 'onDidBlur');\n  });\n});\n"]}