{"version":3,"sources":["getChildNavigation.js"],"names":["createParamGetter","route","paramName","defaultValue","params","getChildNavigation","navigation","childKey","getCurrentParentNavigation","children","childRoute","state","routes","find","r","key","childRouter","router","routeName","focusedGrandChildRoute","index","actionCreators","actions","getActionCreators","actionHelpers","Object","keys","forEach","actionName","actionCreator","action","dispatch","isFirstRouteInParent","parentNavigation","indexOf","getParam","childSubscriber","addListener","grandChildKey","nav","isFocused","currentNavigation","getScreenProps","dangerouslyGetParent","emit"],"mappings":"6PAAA,0FACA,wEACA,0GACA,gGAEA,GAAMA,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,KAAK,QAAI,UAACC,SAAD,CAAYC,YAAZ,CAA6B,CAC9D,GAAMC,CAAAA,MAAM,CAAGH,KAAK,CAACG,MAArB,CAEA,GAAIA,MAAM,EAAIF,SAAS,GAAIE,CAAAA,MAA3B,CAAmC,CACjC,MAAOA,CAAAA,MAAM,CAACF,SAAD,CAAb,CACD,CAED,MAAOC,CAAAA,YAAP,CACD,CAR8B,EAA/B,CAUA,QAASE,CAAAA,mBAAT,CAA4BC,UAA5B,CAAwCC,QAAxC,CAAkDC,0BAAlD,CAA8E,CAC5E,GAAMC,CAAAA,QAAQ,CAAG,wCAA2BH,UAA3B,CAAjB,CACA,GAAMI,CAAAA,UAAU,CAAGJ,UAAU,CAACK,KAAX,CAAiBC,MAAjB,CAAwBC,IAAxB,CAA6B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,GAAF,GAAUR,QAAd,EAA9B,CAAnB,CAEA,GAAI,CAACG,UAAL,CAAiB,CACf,MAAO,KAAP,CACD,CAED,GAAID,QAAQ,CAACF,QAAD,CAAR,EAAsBE,QAAQ,CAACF,QAAD,CAAR,CAAmBI,KAAnB,GAA6BD,UAAvD,CAAmE,CACjE,MAAOD,CAAAA,QAAQ,CAACF,QAAD,CAAf,CACD,CAED,GAAMS,CAAAA,WAAW,CAAG,4BAAeV,UAAU,CAACW,MAA1B,CAAkCP,UAAU,CAACQ,SAA7C,CAApB,CAOA,GAAMC,CAAAA,sBAAsB,CAC1BT,UAAU,CAACE,MAAX,EAAqB,MAAOF,CAAAA,UAAU,CAACU,KAAlB,GAA4B,QAAjD,CACIV,UAAU,CAACE,MAAX,CAAkBF,UAAU,CAACU,KAA7B,CADJ,CAEI,IAHN,CAKA,GAAMC,CAAAA,cAAc,+BACff,UAAU,CAACgB,OADI,CAEfhB,UAAU,CAACW,MAAX,CAAkBM,iBAAlB,CAAoCb,UAApC,CAAgDJ,UAAU,CAACK,KAAX,CAAiBI,GAAjE,CAFe,CAGdC,WAAW,CACXA,WAAW,CAACO,iBAAZ,CAA8BJ,sBAA9B,CAAsDT,UAAU,CAACK,GAAjE,CADW,CAEX,EALc,CAMf,yCAA4BL,UAA5B,CANe,CAApB,CASA,GAAMc,CAAAA,aAAa,CAAG,EAAtB,CACAC,MAAM,CAACC,IAAP,CAAYL,cAAZ,EAA4BM,OAA5B,CAAoC,SAAAC,UAAU,CAAI,CAChDJ,aAAa,CAACI,UAAD,CAAb,CAA4B,UAAa,CACvC,GAAMC,CAAAA,aAAa,CAAGR,cAAc,CAACO,UAAD,CAApC,CACA,GAAME,CAAAA,MAAM,CAAGD,aAAa,MAAb,kBAAf,CACA,MAAOvB,CAAAA,UAAU,CAACyB,QAAX,CAAoBD,MAApB,CAAP,CACD,CAJD,CAKD,CAND,EAQA,GAAIE,CAAAA,qBAAoB,CAAG,IAA3B,CAEA,GAAMC,CAAAA,gBAAgB,CAAGzB,0BAA0B,EAAnD,CAEA,GAAIyB,gBAAJ,CAAsB,CACpBD,qBAAoB,CAClBC,gBAAgB,CAACtB,KAAjB,CAAuBC,MAAvB,CAA8BsB,OAA9B,CAAsCxB,UAAtC,IAAsD,CADxD,CAED,CAED,GACED,QAAQ,CAACF,QAAD,CAAR,EACAE,QAAQ,CAACF,QAAD,CAAR,CAAmByB,oBAAnB,KAA8CA,qBAFhD,CAGE,CACAvB,QAAQ,CAACF,QAAD,CAAR,+BACKE,QAAQ,CAACF,QAAD,CADb,CAEKiB,aAFL,EAGEb,KAAK,CAAED,UAHT,CAIEO,MAAM,CAAED,WAJV,CAKEM,OAAO,CAAED,cALX,CAMEc,QAAQ,CAAEnC,iBAAiB,CAACU,UAAD,CAN7B,GAQA,MAAOD,CAAAA,QAAQ,CAACF,QAAD,CAAf,CACD,CAbD,IAaO,CACL,GAAM6B,CAAAA,eAAe,CAAG,qCACtB9B,UAAU,CAAC+B,WADW,CAEtB9B,QAFsB,CAAxB,CAKAE,QAAQ,CAACF,QAAD,CAAR,+BACKiB,aADL,EAGEb,KAAK,CAAED,UAHT,CAIEO,MAAM,CAAED,WAJV,CAKEM,OAAO,CAAED,cALX,CAMEc,QAAQ,CAAEnC,iBAAiB,CAACU,UAAD,CAN7B,CAQEL,kBAAkB,CAAE,4BAAAiC,aAAa,QAC/BjC,CAAAA,mBAAkB,CAACI,QAAQ,CAACF,QAAD,CAAT,CAAqB+B,aAArB,CAAoC,UAAM,CAC1D,GAAMC,CAAAA,GAAG,CAAG/B,0BAA0B,EAAtC,CACA,MAAO+B,CAAAA,GAAG,EAAIA,GAAG,CAAClC,kBAAJ,CAAuBE,QAAvB,CAAd,CACD,CAHiB,CADa,EARnC,CAcEiC,SAAS,CAAE,oBAAM,CACf,GAAMC,CAAAA,iBAAiB,CAAGjC,0BAA0B,EAApD,CACA,GAAI,CAACiC,iBAAL,CAAwB,CACtB,MAAO,MAAP,CACD,CAJc,0BAKWA,iBAAiB,CAAC9B,KAL7B,CAKPC,MALO,uBAKPA,MALO,CAKCQ,KALD,uBAKCA,KALD,CAMf,GAAI,CAACqB,iBAAiB,CAACD,SAAlB,EAAL,CAAoC,CAClC,MAAO,MAAP,CACD,CACD,GAAI5B,MAAM,CAACQ,KAAD,CAAN,CAAcL,GAAd,GAAsBR,QAA1B,CAAoC,CAClC,MAAO,KAAP,CACD,CACD,MAAO,MAAP,CACD,CA3BH,CA4BEyB,oBAAoB,CAAE,sCAAMA,CAAAA,qBAAN,EA5BxB,CA6BED,QAAQ,CAAEzB,UAAU,CAACyB,QA7BvB,CA8BEW,cAAc,CAAEpC,UAAU,CAACoC,cA9B7B,CA+BEC,oBAAoB,CAAEnC,0BA/BxB,CAgCE6B,WAAW,CAAED,eAAe,CAACC,WAhC/B,CAiCEO,IAAI,CAAER,eAAe,CAACQ,IAjCxB,GAmCA,MAAOnC,CAAAA,QAAQ,CAACF,QAAD,CAAf,CACD,CACF,C,aAEcF,mB","sourcesContent":["import getChildEventSubscriber from './getChildEventSubscriber';\nimport getChildRouter from './getChildRouter';\nimport getNavigationActionCreators from './routers/getNavigationActionCreators';\nimport getChildrenNavigationCache from './getChildrenNavigationCache';\n\nconst createParamGetter = route => (paramName, defaultValue) => {\n  const params = route.params;\n\n  if (params && paramName in params) {\n    return params[paramName];\n  }\n\n  return defaultValue;\n};\n\nfunction getChildNavigation(navigation, childKey, getCurrentParentNavigation) {\n  const children = getChildrenNavigationCache(navigation);\n  const childRoute = navigation.state.routes.find(r => r.key === childKey);\n\n  if (!childRoute) {\n    return null;\n  }\n\n  if (children[childKey] && children[childKey].state === childRoute) {\n    return children[childKey];\n  }\n\n  const childRouter = getChildRouter(navigation.router, childRoute.routeName);\n\n  // If the route has children, we'll use this to pass in to the action creators\n  // for the childRouter so that any action that depends on the active route will\n  // behave as expected. We don't explicitly require that routers implement routes\n  // and index properties, but if we did then we would put an invariant here to\n  // ensure that a focusedGrandChildRoute exists if childRouter is defined.\n  const focusedGrandChildRoute =\n    childRoute.routes && typeof childRoute.index === 'number'\n      ? childRoute.routes[childRoute.index]\n      : null;\n\n  const actionCreators = {\n    ...navigation.actions,\n    ...navigation.router.getActionCreators(childRoute, navigation.state.key),\n    ...(childRouter\n      ? childRouter.getActionCreators(focusedGrandChildRoute, childRoute.key)\n      : {}),\n    ...getNavigationActionCreators(childRoute),\n  };\n\n  const actionHelpers = {};\n  Object.keys(actionCreators).forEach(actionName => {\n    actionHelpers[actionName] = (...args) => {\n      const actionCreator = actionCreators[actionName];\n      const action = actionCreator(...args);\n      return navigation.dispatch(action);\n    };\n  });\n\n  let isFirstRouteInParent = true;\n\n  const parentNavigation = getCurrentParentNavigation();\n\n  if (parentNavigation) {\n    isFirstRouteInParent =\n      parentNavigation.state.routes.indexOf(childRoute) === 0;\n  }\n\n  if (\n    children[childKey] &&\n    children[childKey].isFirstRouteInParent() === isFirstRouteInParent\n  ) {\n    children[childKey] = {\n      ...children[childKey],\n      ...actionHelpers,\n      state: childRoute,\n      router: childRouter,\n      actions: actionCreators,\n      getParam: createParamGetter(childRoute),\n    };\n    return children[childKey];\n  } else {\n    const childSubscriber = getChildEventSubscriber(\n      navigation.addListener,\n      childKey\n    );\n\n    children[childKey] = {\n      ...actionHelpers,\n\n      state: childRoute,\n      router: childRouter,\n      actions: actionCreators,\n      getParam: createParamGetter(childRoute),\n\n      getChildNavigation: grandChildKey =>\n        getChildNavigation(children[childKey], grandChildKey, () => {\n          const nav = getCurrentParentNavigation();\n          return nav && nav.getChildNavigation(childKey);\n        }),\n\n      isFocused: () => {\n        const currentNavigation = getCurrentParentNavigation();\n        if (!currentNavigation) {\n          return false;\n        }\n        const { routes, index } = currentNavigation.state;\n        if (!currentNavigation.isFocused()) {\n          return false;\n        }\n        if (routes[index].key === childKey) {\n          return true;\n        }\n        return false;\n      },\n      isFirstRouteInParent: () => isFirstRouteInParent,\n      dispatch: navigation.dispatch,\n      getScreenProps: navigation.getScreenProps,\n      dangerouslyGetParent: getCurrentParentNavigation,\n      addListener: childSubscriber.addListener,\n      emit: childSubscriber.emit,\n    };\n    return children[childKey];\n  }\n}\n\nexport default getChildNavigation;\n"]}