{"version":3,"sources":["createNavigator.js"],"names":["React","invariant","createNavigator","NavigatorView","router","navigationConfig","Navigator","state","descriptors","screenProps","props","navigation","nextProps","prevState","prevDescriptors","routes","TypeError","forEach","route","key","getComponent","getComponentForRouteName","bind","routeName","childNavigation","getChildNavigation","options","getScreenOptions","Component","navigationOptions"],"mappings":"4eAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,CAEA,QAASC,CAAAA,eAAT,CAAyBC,aAAzB,CAAwCC,MAAxC,CAAgDC,gBAAhD,CAAkE,IAC1DC,CAAAA,SAD0D,0YAK9DC,KAL8D,CAKtD,CACNC,WAAW,CAAE,EADP,CAENC,WAAW,CAAE,MAAKC,KAAL,CAAWD,WAFlB,CALsD,4EAuDrD,CACP,MACE,qBAAC,aAAD,aACM,KAAKC,KADX,EAEE,WAAW,CAAE,KAAKH,KAAL,CAAWE,WAF1B,CAGE,UAAU,CAAE,KAAKC,KAAL,CAAWC,UAHzB,CAIE,gBAAgB,CAAEN,gBAJpB,CAKE,WAAW,CAAE,KAAKE,KAAL,CAAWC,WAL1B,kDADF,CASD,CAjE6D,4EAU9BI,SAV8B,CAUnBC,SAVmB,CAUR,CACpD,GAAMC,CAAAA,eAAe,CAAGD,SAAS,CAACL,WAAlC,CADoD,GAE5CG,CAAAA,UAF4C,CAEhBC,SAFgB,CAE5CD,UAF4C,CAEhCF,WAFgC,CAEhBG,SAFgB,CAEhCH,WAFgC,CAGpDR,SAAS,CACPU,UAAU,EAAI,IADP,CAEP,0LAFO,CAAT,CAHoD,GAO5CJ,CAAAA,KAP4C,CAOlCI,UAPkC,CAO5CJ,KAP4C,IAQ5CQ,CAAAA,MAR4C,CAQjCR,KARiC,CAQ5CQ,MAR4C,CASpD,GAAI,MAAOA,CAAAA,MAAP,GAAkB,WAAtB,CAAmC,CACjC,KAAM,IAAIC,CAAAA,SAAJ,CACJ,oNADI,CAAN,CAGD,CAED,GAAMR,CAAAA,WAAW,CAAG,EAApB,CAEAO,MAAM,CAACE,OAAP,CAAe,SAAAC,KAAK,CAAI,CACtB,GACEJ,eAAe,EACfA,eAAe,CAACI,KAAK,CAACC,GAAP,CADf,EAEAD,KAAK,GAAKJ,eAAe,CAACI,KAAK,CAACC,GAAP,CAAf,CAA2BZ,KAFrC,EAGAE,WAAW,GAAKI,SAAS,CAACJ,WAJ5B,CAKE,CACAD,WAAW,CAACU,KAAK,CAACC,GAAP,CAAX,CAAyBL,eAAe,CAACI,KAAK,CAACC,GAAP,CAAxC,CACA,OACD,CACD,GAAMC,CAAAA,YAAY,CAAGhB,MAAM,CAACiB,wBAAP,CAAgCC,IAAhC,CACnB,IADmB,CAEnBJ,KAAK,CAACK,SAFa,CAArB,CAIA,GAAMC,CAAAA,eAAe,CAAGb,UAAU,CAACc,kBAAX,CAA8BP,KAAK,CAACC,GAApC,CAAxB,CACA,GAAMO,CAAAA,OAAO,CAAGtB,MAAM,CAACuB,gBAAP,CAAwBH,eAAxB,CAAyCf,WAAzC,CAAhB,CACAD,WAAW,CAACU,KAAK,CAACC,GAAP,CAAX,CAAyB,CACvBA,GAAG,CAAED,KAAK,CAACC,GADY,CAEvBC,YAAY,CAAZA,YAFuB,CAGvBM,OAAO,CAAPA,OAHuB,CAIvBnB,KAAK,CAAEW,KAJgB,CAKvBP,UAAU,CAAEa,eALW,CAAzB,CAOD,CAvBD,EAyBA,MAAO,CAAEhB,WAAW,CAAXA,WAAF,CAAeC,WAAW,CAAXA,WAAf,CAAP,CACD,CArD6D,uBACxCT,KAAK,CAAC4B,SADkC,EAC1DtB,SAD0D,CAEvDF,MAFuD,CAE9CA,MAF8C,CAC1DE,SAD0D,CAGvDuB,iBAHuD,CAGnCxB,gBAAgB,CAACwB,iBAHkB,CAoEhE,MAAOvB,CAAAA,SAAP,CACD,CAED,cAAeJ,CAAAA,eAAf","sourcesContent":["import React from 'react';\nimport invariant from '../utils/invariant';\n\nfunction createNavigator(NavigatorView, router, navigationConfig) {\n  class Navigator extends React.Component {\n    static router = router;\n    static navigationOptions = navigationConfig.navigationOptions;\n\n    state = {\n      descriptors: {},\n      screenProps: this.props.screenProps,\n    };\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n      const prevDescriptors = prevState.descriptors;\n      const { navigation, screenProps } = nextProps;\n      invariant(\n        navigation != null,\n        'The navigation prop is missing for this navigator. In react-navigation 3 you must set up your app container directly. More info: https://reactnavigation.org/docs/en/app-containers.html'\n      );\n      const { state } = navigation;\n      const { routes } = state;\n      if (typeof routes === 'undefined') {\n        throw new TypeError(\n          'No \"routes\" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop'\n        );\n      }\n\n      const descriptors = {};\n\n      routes.forEach(route => {\n        if (\n          prevDescriptors &&\n          prevDescriptors[route.key] &&\n          route === prevDescriptors[route.key].state &&\n          screenProps === prevState.screenProps\n        ) {\n          descriptors[route.key] = prevDescriptors[route.key];\n          return;\n        }\n        const getComponent = router.getComponentForRouteName.bind(\n          null,\n          route.routeName\n        );\n        const childNavigation = navigation.getChildNavigation(route.key);\n        const options = router.getScreenOptions(childNavigation, screenProps);\n        descriptors[route.key] = {\n          key: route.key,\n          getComponent,\n          options,\n          state: route,\n          navigation: childNavigation,\n        };\n      });\n\n      return { descriptors, screenProps };\n    }\n\n    render() {\n      return (\n        <NavigatorView\n          {...this.props}\n          screenProps={this.state.screenProps}\n          navigation={this.props.navigation}\n          navigationConfig={navigationConfig}\n          descriptors={this.state.descriptors}\n        />\n      );\n    }\n  }\n\n  return Navigator;\n}\n\nexport default createNavigator;\n"]}