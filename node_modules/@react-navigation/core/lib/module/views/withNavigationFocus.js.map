{"version":3,"sources":["withNavigationFocus.js"],"names":["React","hoistStatics","withNavigation","withNavigationFocus","Component","ComponentWithNavigationFocus","props","subscriptions","navigation","addListener","setState","isFocused","state","forEach","sub","remove","onRef","displayName","name","forwardRef"],"mappings":"2eAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CAEA,cAAe,SAASC,CAAAA,mBAAT,CAA6BC,SAA7B,CAAwC,IAC/CC,CAAAA,4BAD+C,qFAKnD,sCAAYC,KAAZ,CAAmB,8DACjB,8FAAMA,KAAN,GAEA,MAAKC,aAAL,CAAqB,CACnBD,KAAK,CAACE,UAAN,CAAiBC,WAAjB,CAA6B,UAA7B,CAAyC,iBACvC,OAAKC,QAAL,CAAc,CAAEC,SAAS,CAAE,IAAb,CAAd,CADuC,EAAzC,CADmB,CAInBL,KAAK,CAACE,UAAN,CAAiBC,WAAjB,CAA6B,UAA7B,CAAyC,iBACvC,OAAKC,QAAL,CAAc,CAAEC,SAAS,CAAE,KAAb,CAAd,CADuC,EAAzC,CAJmB,CAArB,CASA,MAAKC,KAAL,CAAa,CACXD,SAAS,CAAEL,KAAK,CAACE,UAAN,CAAmBF,KAAK,CAACE,UAAN,CAAiBG,SAAjB,EAAnB,CAAkD,KADlD,CAAb,CAZiB,aAelB,CApBkD,4GAsB5B,CACrB,KAAKJ,aAAL,CAAmBM,OAAnB,CAA2B,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,MAAJ,EAAJ,EAA9B,EACD,CAxBkD,uCA0B1C,CACP,MACE,qBAAC,SAAD,aACM,KAAKT,KADX,EAEE,SAAS,CAAE,KAAKM,KAAL,CAAWD,SAFxB,CAGE,GAAG,CAAE,KAAKL,KAAL,CAAWU,KAHlB,kDADF,CAOD,CAlCkD,0CACVhB,KAAK,CAACI,SADI,EAC/CC,4BAD+C,CAE5CY,WAF4C,yBAEPb,SAAS,CAACa,WAAV,EAC1Cb,SAAS,CAACc,IAHuC,MAqCrD,MAAOjB,CAAAA,YAAY,CACjBC,cAAc,CAACG,4BAAD,CAA+B,CAAEc,UAAU,CAAE,KAAd,CAA/B,CADG,CAEjBf,SAFiB,CAAnB,CAID","sourcesContent":["import React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport withNavigation from './withNavigation';\n\nexport default function withNavigationFocus(Component) {\n  class ComponentWithNavigationFocus extends React.Component {\n    static displayName = `withNavigationFocus(${Component.displayName ||\n      Component.name})`;\n\n    constructor(props) {\n      super(props);\n\n      this.subscriptions = [\n        props.navigation.addListener('didFocus', () =>\n          this.setState({ isFocused: true })\n        ),\n        props.navigation.addListener('willBlur', () =>\n          this.setState({ isFocused: false })\n        ),\n      ];\n\n      this.state = {\n        isFocused: props.navigation ? props.navigation.isFocused() : false,\n      };\n    }\n\n    componentWillUnmount() {\n      this.subscriptions.forEach(sub => sub.remove());\n    }\n\n    render() {\n      return (\n        <Component\n          {...this.props}\n          isFocused={this.state.isFocused}\n          ref={this.props.onRef}\n        />\n      );\n    }\n  }\n\n  return hoistStatics(\n    withNavigation(ComponentWithNavigationFocus, { forwardRef: false }),\n    Component\n  );\n}\n"]}