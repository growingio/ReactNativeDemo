{"version":3,"sources":["NavigationActions.js"],"names":["BACK","INIT","NAVIGATE","SET_PARAMS","back","payload","type","key","immediate","init","action","params","navigate","routeName","setParams","preserveFocus"],"mappings":"AACA,MAAO,IAAMA,CAAAA,IAAI,CAAG,iBAAb,CACP,MAAO,IAAMC,CAAAA,IAAI,CAAG,iBAAb,CACP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,qBAAjB,CACP,MAAO,IAAMC,CAAAA,UAAU,CAAG,uBAAnB,CAGP,MAAO,IAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAACC,CAAAA,OAAD,2DAAW,EAAX,OAAmB,CACrCC,IAAI,CAAEN,IAD+B,CAErCO,GAAG,CAAEF,OAAO,CAACE,GAFwB,CAGrCC,SAAS,CAAEH,OAAO,CAACG,SAHkB,CAAnB,EAAb,CAMP,MAAO,IAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAkB,IAAjBJ,CAAAA,OAAiB,2DAAP,EAAO,CACpC,GAAMK,CAAAA,MAAM,CAAG,CACbJ,IAAI,CAAEL,IADO,CAAf,CAGA,GAAII,OAAO,CAACM,MAAZ,CAAoB,CAClBD,MAAM,CAACC,MAAP,CAAgBN,OAAO,CAACM,MAAxB,CACD,CACD,MAAOD,CAAAA,MAAP,CACD,CARM,CAUP,MAAO,IAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAP,OAAO,CAAI,CACjC,GAAMK,CAAAA,MAAM,CAAG,CACbJ,IAAI,CAAEJ,QADO,CAEbW,SAAS,CAAER,OAAO,CAACQ,SAFN,CAAf,CAIA,GAAIR,OAAO,CAACM,MAAZ,CAAoB,CAClBD,MAAM,CAACC,MAAP,CAAgBN,OAAO,CAACM,MAAxB,CACD,CACD,GAAIN,OAAO,CAACK,MAAZ,CAAoB,CAClBA,MAAM,CAACA,MAAP,CAAgBL,OAAO,CAACK,MAAxB,CACD,CACD,GAAIL,OAAO,CAACE,GAAZ,CAAiB,CACfG,MAAM,CAACH,GAAP,CAAaF,OAAO,CAACE,GAArB,CACD,CACD,MAAOG,CAAAA,MAAP,CACD,CAfM,CAiBP,MAAO,IAAMI,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAT,OAAO,QAAK,CACnCC,IAAI,CAAEH,UAD6B,CAEnCI,GAAG,CAAEF,OAAO,CAACE,GAFsB,CAGnCI,MAAM,CAAEN,OAAO,CAACM,MAHmB,CAInCI,aAAa,CAAE,IAJoB,CAAL,EAAzB","sourcesContent":["// Action constants\nexport const BACK = 'Navigation/BACK';\nexport const INIT = 'Navigation/INIT';\nexport const NAVIGATE = 'Navigation/NAVIGATE';\nexport const SET_PARAMS = 'Navigation/SET_PARAMS';\n\n// Action creators\nexport const back = (payload = {}) => ({\n  type: BACK,\n  key: payload.key,\n  immediate: payload.immediate,\n});\n\nexport const init = (payload = {}) => {\n  const action = {\n    type: INIT,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  return action;\n};\n\nexport const navigate = payload => {\n  const action = {\n    type: NAVIGATE,\n    routeName: payload.routeName,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  if (payload.action) {\n    action.action = payload.action;\n  }\n  if (payload.key) {\n    action.key = payload.key;\n  }\n  return action;\n};\n\nexport const setParams = payload => ({\n  type: SET_PARAMS,\n  key: payload.key,\n  params: payload.params,\n  preserveFocus: true,\n});\n"]}