{"version":3,"sources":["getNavigation.js"],"names":["getNavigationActionCreators","getChildNavigation","getChildrenNavigationCache","getNavigation","router","state","dispatch","actionSubscribers","getScreenProps","getCurrentNavigation","actions","getActionCreators","navigation","childKey","isFocused","routes","index","key","addListener","eventName","handler","remove","add","delete","dangerouslyGetParent","isFirstRouteInParent","_childrenNavigation","actionCreators","Object","keys","forEach","actionName"],"mappings":"+DAAA,MAAOA,CAAAA,2BAAP,KAAwC,uCAAxC,CACA,MAAOC,CAAAA,mBAAP,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,0BAAP,KAAuC,8BAAvC,CAEA,cAAe,SAASC,CAAAA,aAAT,CACbC,MADa,CAEbC,KAFa,CAGbC,QAHa,CAIbC,iBAJa,CAKbC,cALa,CAMbC,oBANa,CAOb,CACA,GAAMC,CAAAA,OAAO,CAAGN,MAAM,CAACO,iBAAP,CAAyBN,KAAzB,CAAgC,IAAhC,CAAhB,CAEA,GAAMO,CAAAA,UAAU,CAAG,CACjBF,OAAO,CAAPA,OADiB,CAEjBN,MAAM,CAANA,MAFiB,CAGjBC,KAAK,CAALA,KAHiB,CAIjBC,QAAQ,CAARA,QAJiB,CAKjBE,cAAc,CAAdA,cALiB,CAMjBP,kBAAkB,CAAE,4BAAAY,QAAQ,QAC1BZ,CAAAA,mBAAkB,CAACW,UAAD,CAAaC,QAAb,CAAuBJ,oBAAvB,CADQ,EANX,CAQjBK,SAAS,CAAE,mBAAAD,QAAQ,CAAI,2BACKJ,oBAAoB,GAAGJ,KAD5B,CACbU,MADa,uBACbA,MADa,CACLC,KADK,uBACLA,KADK,CAErB,GAAIH,QAAQ,EAAI,IAAZ,EAAoBE,MAAM,CAACC,KAAD,CAAN,CAAcC,GAAd,GAAsBJ,QAA9C,CAAwD,CACtD,MAAO,KAAP,CACD,CACD,MAAO,MAAP,CACD,CAdgB,CAejBK,WAAW,CAAE,qBAACC,SAAD,CAAYC,OAAZ,CAAwB,CACnC,GAAID,SAAS,GAAK,QAAlB,CAA4B,CAC1B,MAAO,CAAEE,MAAM,CAAE,iBAAM,CAAE,CAAlB,CAAP,CACD,CACDd,iBAAiB,CAACe,GAAlB,CAAsBF,OAAtB,EACA,MAAO,CACLC,MAAM,CAAE,iBAAM,CACZd,iBAAiB,CAACgB,MAAlB,CAAyBH,OAAzB,EACD,CAHI,CAAP,CAKD,CAzBgB,CA0BjBI,oBAAoB,CAAE,sCAAM,KAAN,EA1BL,CA2BjBC,oBAAoB,CAAE,sCAAM,KAAN,EA3BL,CA4BjBC,mBAAmB,CAAExB,0BAA0B,CAACO,oBAAoB,EAArB,CA5B9B,CAAnB,CA+BA,GAAMkB,CAAAA,cAAc,kBACf3B,2BAA2B,CAACY,UAAU,CAACP,KAAZ,CADZ,CAEfK,OAFe,CAApB,CAKAkB,MAAM,CAACC,IAAP,CAAYF,cAAZ,EAA4BG,OAA5B,CAAoC,SAAAC,UAAU,CAAI,CAChDnB,UAAU,CAACmB,UAAD,CAAV,CAAyB,iBACvBnB,CAAAA,UAAU,CAACN,QAAX,CAAoBqB,cAAc,CAACI,UAAD,CAAd,OAAAJ,cAAc,WAAlC,CADuB,EAAzB,CAED,CAHD,EAKA,MAAOf,CAAAA,UAAP,CACD","sourcesContent":["import getNavigationActionCreators from './routers/getNavigationActionCreators';\nimport getChildNavigation from './getChildNavigation';\nimport getChildrenNavigationCache from './getChildrenNavigationCache';\n\nexport default function getNavigation(\n  router,\n  state,\n  dispatch,\n  actionSubscribers,\n  getScreenProps,\n  getCurrentNavigation\n) {\n  const actions = router.getActionCreators(state, null);\n\n  const navigation = {\n    actions,\n    router,\n    state,\n    dispatch,\n    getScreenProps,\n    getChildNavigation: childKey =>\n      getChildNavigation(navigation, childKey, getCurrentNavigation),\n    isFocused: childKey => {\n      const { routes, index } = getCurrentNavigation().state;\n      if (childKey == null || routes[index].key === childKey) {\n        return true;\n      }\n      return false;\n    },\n    addListener: (eventName, handler) => {\n      if (eventName !== 'action') {\n        return { remove: () => {} };\n      }\n      actionSubscribers.add(handler);\n      return {\n        remove: () => {\n          actionSubscribers.delete(handler);\n        },\n      };\n    },\n    dangerouslyGetParent: () => null,\n    isFirstRouteInParent: () => true,\n    _childrenNavigation: getChildrenNavigationCache(getCurrentNavigation()),\n  };\n\n  const actionCreators = {\n    ...getNavigationActionCreators(navigation.state),\n    ...actions,\n  };\n\n  Object.keys(actionCreators).forEach(actionName => {\n    navigation[actionName] = (...args) =>\n      navigation.dispatch(actionCreators[actionName](...args));\n  });\n\n  return navigation;\n}\n"]}