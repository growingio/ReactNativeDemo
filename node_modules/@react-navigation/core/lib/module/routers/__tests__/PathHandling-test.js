import _classCallCheck from"@babel/runtime/helpers/classCallCheck";import _createClass from"@babel/runtime/helpers/createClass";import _possibleConstructorReturn from"@babel/runtime/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime/helpers/getPrototypeOf";import _inherits from"@babel/runtime/helpers/inherits";var _jsxFileName="/Users/brentvatne/coding/react-navigation-core/src/routers/__tests__/PathHandling-test.js";import React from'react';import SwitchRouter from'../SwitchRouter';import StackRouter from'../StackRouter';import TabRouter from'../TabRouter';import*as NavigationActions from'../../NavigationActions';import{_TESTING_ONLY_normalize_keys}from'../KeyGenerator.ts';beforeEach(function(){_TESTING_ONLY_normalize_keys();});var performRouterTest=function performRouterTest(createTestRouter){var ListScreen=function ListScreen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:16}});};var ProfileNavigator=function ProfileNavigator(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:18}});};ProfileNavigator.router=StackRouter({list:{path:'list/:id',screen:ListScreen}});var MainNavigator=function MainNavigator(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:26}});};MainNavigator.router=StackRouter({profile:{path:'p/:id',screen:ProfileNavigator}});var LoginScreen=function LoginScreen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:34}});};var AuthNavigator=function AuthNavigator(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:36}});};AuthNavigator.router=StackRouter({login:{screen:LoginScreen}});var BarScreen=function BarScreen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:43}});};var FooNavigator=function(_React$Component){_inherits(FooNavigator,_React$Component);function FooNavigator(){_classCallCheck(this,FooNavigator);return _possibleConstructorReturn(this,_getPrototypeOf(FooNavigator).apply(this,arguments));}_createClass(FooNavigator,[{key:"render",value:function render(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:53}});}}]);return FooNavigator;}(React.Component);FooNavigator.router=StackRouter({bar:{path:'b/:barThing',screen:BarScreen}});var PersonScreen=function PersonScreen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:57}});};var testRouter=createTestRouter({main:{screen:MainNavigator},baz:{path:null,screen:FooNavigator},auth:{screen:AuthNavigator},person:{path:'people/:id',screen:PersonScreen},foo:{path:'fo/:fooThing',screen:FooNavigator}});it('Handles empty URIs with empty action',function(){var router=createTestRouter({Foo:{screen:function screen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:84}});}},Bar:{screen:function screen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:87}});}}},{initialRouteName:'Bar',initialRouteParams:{foo:42}});var action=router.getActionForPathAndParams('');expect(action).toEqual(null);var state=router.getStateForAction(action||NavigationActions.init());expect(state.routes[state.index]).toEqual(expect.objectContaining({routeName:'Bar',params:{foo:42}}));});it('Handles paths with several params',function(){var router=createTestRouter({Person:{path:'people/:person',screen:function screen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:107}});}},Task:{path:'people/:person/tasks/:task',screen:function screen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:111}});}},ThingA:{path:'things/:good',screen:function screen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:115}});}},Thing:{path:'things/:good/:thing',screen:function screen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:119}});}}});var action=router.getActionForPathAndParams('people/brent/tasks/everything');expect(action).toEqual({type:NavigationActions.NAVIGATE,routeName:'Task',params:{person:'brent',task:'everything'}});var action1=router.getActionForPathAndParams('people/lucy');expect(action1).toEqual({type:NavigationActions.NAVIGATE,routeName:'Person',params:{person:'lucy'}});var action2=router.getActionForPathAndParams('things/foo/bar');expect(action2).toEqual({type:NavigationActions.NAVIGATE,routeName:'Thing',params:{good:'foo',thing:'bar'}});var action3=router.getActionForPathAndParams('things/foo');expect(action3).toEqual({type:NavigationActions.NAVIGATE,routeName:'ThingA',params:{good:'foo'}});});it('Handles empty path configuration',function(){var router=createTestRouter({Foo:{screen:function screen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:156}});}},Bar:{screen:function screen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:159}});},path:''}});var action=router.getActionForPathAndParams('');expect(action).toEqual({type:NavigationActions.NAVIGATE,routeName:'Bar',params:{}});});it('Handles wildcard path configuration',function(){var router=createTestRouter({Foo:{screen:function screen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:174}});}},Bar:{screen:function screen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:177}});},path:':something'}});var action=router.getActionForPathAndParams('');expect(action).toEqual(null);var action1=router.getActionForPathAndParams('Foo');expect(action1).toEqual({type:NavigationActions.NAVIGATE,routeName:'Foo',params:{}});var action2=router.getActionForPathAndParams('asdf');expect(action2).toEqual({type:NavigationActions.NAVIGATE,routeName:'Bar',params:{something:'asdf'}});});it('Null path behavior',function(){var ScreenA=function ScreenA(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:199}});};var router=createTestRouter({Bar:{screen:ScreenA},Foo:{path:null,screen:ScreenA},Baz:{path:'',screen:ScreenA}});var action0=router.getActionForPathAndParams('test/random',{});expect(action0).toBe(null);var action1=router.getActionForPathAndParams('',{});expect(action1.routeName).toBe('Baz');var state1=router.getStateForAction(action1);expect(state1.routes[state1.index].routeName).toBe('Baz');});it('Multiple null path sub routers path behavior',function(){var ScreenA=function ScreenA(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:223}});};var ScreenB=function ScreenB(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:224}});};ScreenB.router=createTestRouter({Foo:ScreenA});var ScreenC=function ScreenC(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:228}});};ScreenC.router=createTestRouter({Bar:{path:'bar/:id',screen:ScreenA},Empty:{path:'',screen:ScreenA}});var router=createTestRouter({A:{screen:ScreenA},B:{path:null,screen:ScreenB},C:{path:null,screen:ScreenC}});var action0=router.getActionForPathAndParams('Foo',{});expect(action0.routeName).toBe('B');expect(action0.action.routeName).toBe('Foo');var action1=router.getActionForPathAndParams('',{});expect(action1.routeName).toBe('C');expect(action1.action.routeName).toBe('Empty');var action2=router.getActionForPathAndParams('A',{});expect(action2.routeName).toBe('A');var action3=router.getActionForPathAndParams('bar/asdf',{});expect(action3.routeName).toBe('C');expect(action3.action.routeName).toBe('Bar');expect(action3.action.params.id).toBe('asdf');});it('Null and empty string path sub routers behavior',function(){var ScreenA=function ScreenA(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:270}});};var ScreenB=function ScreenB(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:271}});};ScreenB.router=createTestRouter({Foo:ScreenA,Baz:{screen:ScreenA,path:''}});var ScreenC=function ScreenC(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:279}});};ScreenC.router=createTestRouter({Boo:ScreenA,Bar:ScreenA,Baz:{screen:ScreenA,path:''}});var router=createTestRouter({B:{path:null,screen:ScreenB},C:{path:'',screen:ScreenC}});var action0=router.getActionForPathAndParams('',{});expect(action0.routeName).toBe('C');expect(action0.action.routeName).toBe('Baz');var action1=router.getActionForPathAndParams('Foo',{});expect(action1.routeName).toBe('B');expect(action1.action.routeName).toBe('Foo');var action2=router.getActionForPathAndParams('Bar',{});expect(action2.routeName).toBe('C');expect(action2.action.routeName).toBe('Bar');var action3=router.getActionForPathAndParams('unknown',{});expect(action3).toBe(null);});it('Empty path acts as wildcard for nested router',function(){var ScreenA=function ScreenA(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:315}});};var Foo=function Foo(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:316}});};var ScreenC=function ScreenC(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:317}});};ScreenC.router=createTestRouter({Boo:ScreenA,Bar:ScreenA});Foo.router=createTestRouter({Quo:ScreenA,Qux:{screen:ScreenC,path:''}});var router=createTestRouter({Bar:{screen:ScreenA},Foo:Foo});var action0=router.getActionForPathAndParams('Foo/Bar',{});expect(action0.routeName).toBe('Foo');expect(action0.action.routeName).toBe('Qux');expect(action0.action.action.routeName).toBe('Bar');});it('Gets deep path with pure wildcard match',function(){var ScreenA=function ScreenA(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:342}});};var ScreenB=function ScreenB(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:343}});};var ScreenC=function ScreenC(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:344}});};ScreenA.router=createTestRouter({Boo:{path:'boo',screen:ScreenC},Baz:{path:'baz/:bazId',screen:ScreenB}});ScreenC.router=createTestRouter({Boo2:{path:'',screen:ScreenB}});var router=createTestRouter({Foo:{path:null,screen:ScreenA},Bar:{screen:ScreenB}});{var state={index:0,routes:[{index:1,key:'Foo',routeName:'Foo',params:{id:'123'},routes:[{index:0,key:'Boo',routeName:'Boo',routes:[{key:'Boo2',routeName:'Boo2'}]},{key:'Baz',routeName:'Baz',params:{bazId:'321'}}]},{key:'Bar',routeName:'Bar'}]};var _router$getPathAndPar=router.getPathAndParamsForState(state),path=_router$getPathAndPar.path,params=_router$getPathAndPar.params;expect(path).toEqual('baz/321');expect(params.id).toEqual('123');}{var _state={index:0,routes:[{index:0,key:'Foo',routeName:'Foo',params:{id:'123'},routes:[{index:0,key:'Boo',routeName:'Boo',routes:[{key:'Boo2',routeName:'Boo2'}]},{key:'Baz',routeName:'Baz',params:{bazId:'321'}}]},{key:'Bar',routeName:'Bar'}]};var _router$getPathAndPar2=router.getPathAndParamsForState(_state),_path=_router$getPathAndPar2.path,_params=_router$getPathAndPar2.params;expect(_path).toEqual('boo');expect(_params).toEqual({id:'123'});}});it('URI encoded string get passed to deep link',function(){var uri='people/2018%2F02%2F07';var action=testRouter.getActionForPathAndParams(uri);expect(action).toEqual({routeName:'person',params:{id:'2018/02/07'},type:NavigationActions.NAVIGATE});var malformedUri='people/%E0%A4%A';var action2=testRouter.getActionForPathAndParams(malformedUri);expect(action2).toEqual({routeName:'person',params:{id:'%E0%A4%A'},type:NavigationActions.NAVIGATE});});it('URI encoded path param gets parsed and correctly printed',function(){var action=testRouter.getActionForPathAndParams('people/Henry%20L');expect(action).toEqual({routeName:'person',params:{id:'Henry L'},type:NavigationActions.NAVIGATE});var s=testRouter.getStateForAction(action);var out=testRouter.getPathAndParamsForState(s);expect(out.path).toEqual('people/Henry%20L');expect(out.params).toEqual({});});it('Querystring params get passed to nested deep link',function(){var action=testRouter.getActionForPathAndParams('main/p/4/list/10259959195',{code:'test',foo:'bar'});expect(action).toEqual({type:NavigationActions.NAVIGATE,routeName:'main',params:{code:'test',foo:'bar'},action:{type:NavigationActions.NAVIGATE,routeName:'profile',params:{id:'4',code:'test',foo:'bar'},action:{type:NavigationActions.NAVIGATE,routeName:'list',params:{id:'10259959195',code:'test',foo:'bar'}}}});var action2=testRouter.getActionForPathAndParams('main/p/4/list/10259959195',{code:'',foo:'bar'});expect(action2).toEqual({type:NavigationActions.NAVIGATE,routeName:'main',params:{code:'',foo:'bar'},action:{type:NavigationActions.NAVIGATE,routeName:'profile',params:{id:'4',code:'',foo:'bar'},action:{type:NavigationActions.NAVIGATE,routeName:'list',params:{id:'10259959195',code:'',foo:'bar'}}}});});it('paths option on router overrides path from route config',function(){var router=createTestRouter({main:{screen:MainNavigator},baz:{path:null,screen:FooNavigator}},{paths:{baz:'overridden'}});var action=router.getActionForPathAndParams('overridden',{});expect(action.type).toEqual(NavigationActions.NAVIGATE);expect(action.routeName).toEqual('baz');});it('paths option set as null on router overrides path from route config',function(){var router=createTestRouter({main:{screen:MainNavigator},baz:{path:'bazPath',screen:FooNavigator}},{paths:{baz:null}});var action=router.getActionForPathAndParams('b/noBaz',{});expect(action.type).toEqual(NavigationActions.NAVIGATE);expect(action.routeName).toEqual('baz');});};describe('Path handling for stack router',function(){performRouterTest(StackRouter);});describe('Path handling for switch router',function(){performRouterTest(SwitchRouter);});it('Handles nested switch routers',function(){var AScreen=function AScreen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:567}});};var DocsNavigator=function DocsNavigator(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:568}});};DocsNavigator.router=SwitchRouter({A:AScreen,B:AScreen,C:AScreen});DocsNavigator.path='docs';var router=SwitchRouter({Docs:DocsNavigator,D:AScreen});var action=router.getActionForPathAndParams('docs/B',{});expect(action.type).toEqual(NavigationActions.NAVIGATE);expect(action.routeName).toEqual('Docs');expect(action.action.type).toEqual(NavigationActions.NAVIGATE);expect(action.action.routeName).toEqual('B');});var performRouteNameAsPathDisabledTest=function performRouteNameAsPathDisabledTest(createTestRouter){var BScreen=function BScreen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:588}});};var NestedNavigator=function NestedNavigator(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:589}});};NestedNavigator.router=createTestRouter({B:{screen:BScreen,path:'baz'}});var router=createTestRouter({A:NestedNavigator},{disableRouteNamePaths:true});it('disableRouteNamePaths option on router prevent the default path to be the routeName',function(){var action=router.getActionForPathAndParams('baz',{});expect(action.routeName).toBe('A');expect(action.action.routeName).toBe('B');});};describe('Stack router handles disableRouteNamePaths',function(){performRouteNameAsPathDisabledTest(StackRouter);});describe('Switch router handles disableRouteNamePaths',function(){performRouteNameAsPathDisabledTest(SwitchRouter);});describe('Tab router handles disableRouteNamePaths',function(){performRouteNameAsPathDisabledTest(TabRouter);});
//# sourceMappingURL=PathHandling-test.js.map