{"version":3,"sources":["TabRouter-test.js"],"names":["React","TabRouter","NavigationActions","INIT_ACTION","type","INIT","BareLeafRouteConfig","screen","describe","it","ScreenA","ScreenB","router","Foo","Bar","state","getStateForAction","expectedState","index","routes","key","routeName","isTransitioning","expect","toEqual","state2","NAVIGATE","expectedState2","getComponentForState","state3","getScreen","initialRouteName","initialRouteParams","name","params","SET_PARAMS","initialState","other","ChildTabNavigator","Baz","Boo","action","getActionForPathAndParams","foo","navAction","ChildNavigator0","ChildNavigator1","Zoo","Zap","MidNavigator","Fee","Gah","state4","path","expectedAction","great","undefined","getPathAndParamsForState","a","b","state0","state1","ScreenC","InnerNavigator","inner","c","backBehavior","BACK","PlainScreen","screenApreState","preState","comparable","result","Array","map","navigate","innerState","noMatchAction","innerState2"],"mappings":"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","sourcesContent":["/* eslint react/display-name:0 */\n\nimport React from 'react';\nimport TabRouter from '../TabRouter';\n\nimport * as NavigationActions from '../../NavigationActions';\n\nconst INIT_ACTION = { type: NavigationActions.INIT };\n\nconst BareLeafRouteConfig = {\n  screen: () => <div />,\n};\n\ndescribe('TabRouter', () => {\n  it('Handles basic tab logic', () => {\n    const ScreenA = () => <div />;\n    const ScreenB = () => <div />;\n    const router = TabRouter({\n      Foo: { screen: ScreenA },\n      Bar: { screen: ScreenB },\n    });\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    const expectedState = {\n      index: 0,\n      routes: [\n        { key: 'Foo', routeName: 'Foo' },\n        { key: 'Bar', routeName: 'Bar' },\n      ],\n      isTransitioning: false,\n    };\n    expect(state).toEqual(expectedState);\n    const state2 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'Bar' },\n      state\n    );\n    const expectedState2 = {\n      index: 1,\n      routes: [\n        { key: 'Foo', routeName: 'Foo' },\n        { key: 'Bar', routeName: 'Bar' },\n      ],\n      isTransitioning: false,\n    };\n    expect(state2).toEqual(expectedState2);\n    expect(router.getComponentForState(expectedState)).toEqual(ScreenA);\n    expect(router.getComponentForState(expectedState2)).toEqual(ScreenB);\n    const state3 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'Bar' },\n      state2\n    );\n    expect(state3).toEqual(null);\n  });\n\n  it('Handles getScreen', () => {\n    const ScreenA = () => <div />;\n    const ScreenB = () => <div />;\n    const router = TabRouter({\n      Foo: { getScreen: () => ScreenA },\n      Bar: { getScreen: () => ScreenB },\n    });\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    const expectedState = {\n      index: 0,\n      routes: [\n        { key: 'Foo', routeName: 'Foo' },\n        { key: 'Bar', routeName: 'Bar' },\n      ],\n      isTransitioning: false,\n    };\n    expect(state).toEqual(expectedState);\n    const state2 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'Bar' },\n      state\n    );\n    const expectedState2 = {\n      index: 1,\n      routes: [\n        { key: 'Foo', routeName: 'Foo' },\n        { key: 'Bar', routeName: 'Bar' },\n      ],\n      isTransitioning: false,\n    };\n    expect(state2).toEqual(expectedState2);\n    expect(router.getComponentForState(expectedState)).toEqual(ScreenA);\n    expect(router.getComponentForState(expectedState2)).toEqual(ScreenB);\n    const state3 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'Bar' },\n      state2\n    );\n    expect(state3).toEqual(null);\n  });\n\n  it('Can set the initial tab', () => {\n    const router = TabRouter(\n      { Foo: BareLeafRouteConfig, Bar: BareLeafRouteConfig },\n      { initialRouteName: 'Bar' }\n    );\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    expect(state).toEqual({\n      index: 1,\n      routes: [\n        { key: 'Foo', routeName: 'Foo' },\n        { key: 'Bar', routeName: 'Bar' },\n      ],\n      isTransitioning: false,\n    });\n  });\n\n  it('Can set the initial params', () => {\n    const router = TabRouter(\n      { Foo: BareLeafRouteConfig, Bar: BareLeafRouteConfig },\n      { initialRouteName: 'Bar', initialRouteParams: { name: 'Qux' } }\n    );\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    expect(state).toEqual({\n      index: 1,\n      routes: [\n        { key: 'Foo', routeName: 'Foo' },\n        { key: 'Bar', routeName: 'Bar', params: { name: 'Qux' } },\n      ],\n      isTransitioning: false,\n    });\n  });\n\n  it('Handles the SetParams action', () => {\n    const router = TabRouter({\n      Foo: {\n        screen: () => <div />,\n      },\n      Bar: {\n        screen: () => <div />,\n      },\n    });\n    const state2 = router.getStateForAction({\n      type: NavigationActions.SET_PARAMS,\n      params: { name: 'Qux' },\n      key: 'Foo',\n    });\n    expect(state2 && state2.routes[0].params).toEqual({ name: 'Qux' });\n  });\n\n  it('Handles the SetParams action for inactive routes', () => {\n    const router = TabRouter(\n      {\n        Foo: {\n          screen: () => <div />,\n        },\n        Bar: {\n          screen: () => <div />,\n        },\n      },\n      {\n        initialRouteName: 'Bar',\n      }\n    );\n    const initialState = {\n      index: 1,\n      routes: [\n        {\n          key: 'RouteA',\n          routeName: 'Foo',\n          params: { name: 'InitialParam', other: 'Unchanged' },\n        },\n        { key: 'RouteB', routeName: 'Bar', params: {} },\n      ],\n    };\n    const state = router.getStateForAction(\n      {\n        type: NavigationActions.SET_PARAMS,\n        params: { name: 'NewParam' },\n        key: 'RouteA',\n      },\n      initialState\n    );\n    expect(state.index).toEqual(1);\n    expect(state.routes[0].params).toEqual({\n      name: 'NewParam',\n      other: 'Unchanged',\n    });\n  });\n\n  it('getStateForAction returns null when navigating to same tab', () => {\n    const router = TabRouter(\n      { Foo: BareLeafRouteConfig, Bar: BareLeafRouteConfig },\n      { initialRouteName: 'Bar' }\n    );\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    const state2 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'Bar' },\n      state\n    );\n    expect(state2).toEqual(null);\n  });\n\n  it('getStateForAction returns initial navigate', () => {\n    const router = TabRouter({\n      Foo: BareLeafRouteConfig,\n      Bar: BareLeafRouteConfig,\n    });\n    const state = router.getStateForAction({\n      type: NavigationActions.NAVIGATE,\n      routeName: 'Foo',\n    });\n    expect(state && state.index).toEqual(0);\n  });\n\n  it('Handles nested tabs and nested actions', () => {\n    const ChildTabNavigator = () => <div />;\n    ChildTabNavigator.router = TabRouter({\n      Foo: BareLeafRouteConfig,\n      Bar: BareLeafRouteConfig,\n    });\n    const router = TabRouter({\n      Foo: BareLeafRouteConfig,\n      Baz: { screen: ChildTabNavigator },\n      Boo: BareLeafRouteConfig,\n    });\n    const action = router.getActionForPathAndParams('Baz/Bar', { foo: '42' });\n    const navAction = {\n      type: NavigationActions.NAVIGATE,\n      routeName: 'Baz',\n      params: { foo: '42' },\n      action: {\n        type: NavigationActions.NAVIGATE,\n        routeName: 'Bar',\n        params: { foo: '42' },\n      },\n    };\n    expect(action).toEqual(navAction);\n    const state = router.getStateForAction(navAction);\n    expect(state).toEqual({\n      index: 1,\n      isTransitioning: false,\n      routes: [\n        {\n          key: 'Foo',\n          routeName: 'Foo',\n        },\n        {\n          index: 1,\n          isTransitioning: false,\n          key: 'Baz',\n          routeName: 'Baz',\n          params: { foo: '42' },\n          routes: [\n            {\n              key: 'Foo',\n              routeName: 'Foo',\n            },\n            {\n              key: 'Bar',\n              routeName: 'Bar',\n              params: {\n                foo: '42',\n              },\n            },\n          ],\n        },\n        {\n          key: 'Boo',\n          routeName: 'Boo',\n        },\n      ],\n    });\n  });\n\n  it('Handles passing params to nested tabs', () => {\n    const ChildTabNavigator = () => <div />;\n    ChildTabNavigator.router = TabRouter({\n      Boo: BareLeafRouteConfig,\n      Bar: BareLeafRouteConfig,\n    });\n    const router = TabRouter({\n      Foo: BareLeafRouteConfig,\n      Baz: { screen: ChildTabNavigator },\n    });\n    const navAction = {\n      type: NavigationActions.NAVIGATE,\n      routeName: 'Baz',\n    };\n    let state = router.getStateForAction(navAction);\n    expect(state).toEqual({\n      index: 1,\n      isTransitioning: false,\n      routes: [\n        { key: 'Foo', routeName: 'Foo' },\n        {\n          index: 0,\n          key: 'Baz',\n          routeName: 'Baz',\n          isTransitioning: false,\n          routes: [\n            { key: 'Boo', routeName: 'Boo' },\n            { key: 'Bar', routeName: 'Bar' },\n          ],\n        },\n      ],\n    });\n\n    // Ensure that navigating back and forth doesn't overwrite\n    state = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'Bar' },\n      state\n    );\n    state = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'Boo' },\n      state\n    );\n    expect(state && state.routes[1]).toEqual({\n      index: 0,\n      isTransitioning: false,\n      key: 'Baz',\n      routeName: 'Baz',\n      routes: [\n        { key: 'Boo', routeName: 'Boo' },\n        { key: 'Bar', routeName: 'Bar' },\n      ],\n    });\n  });\n\n  it('Handles initial deep linking into nested tabs', () => {\n    const ChildTabNavigator = () => <div />;\n    ChildTabNavigator.router = TabRouter({\n      Foo: BareLeafRouteConfig,\n      Bar: BareLeafRouteConfig,\n    });\n    const router = TabRouter({\n      Foo: BareLeafRouteConfig,\n      Baz: { screen: ChildTabNavigator },\n      Boo: BareLeafRouteConfig,\n    });\n    const state = router.getStateForAction({\n      type: NavigationActions.NAVIGATE,\n      routeName: 'Bar',\n    });\n    expect(state).toEqual({\n      index: 1,\n      isTransitioning: false,\n      routes: [\n        { key: 'Foo', routeName: 'Foo' },\n        {\n          index: 1,\n          key: 'Baz',\n          routeName: 'Baz',\n          isTransitioning: false,\n          routes: [\n            { key: 'Foo', routeName: 'Foo' },\n            { key: 'Bar', routeName: 'Bar' },\n          ],\n        },\n        { key: 'Boo', routeName: 'Boo' },\n      ],\n    });\n    const state2 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'Foo' },\n      state\n    );\n    expect(state2).toEqual({\n      index: 1,\n      isTransitioning: false,\n      routes: [\n        { key: 'Foo', routeName: 'Foo' },\n        {\n          index: 0,\n          key: 'Baz',\n          routeName: 'Baz',\n          isTransitioning: false,\n          routes: [\n            { key: 'Foo', routeName: 'Foo' },\n            { key: 'Bar', routeName: 'Bar' },\n          ],\n        },\n        { key: 'Boo', routeName: 'Boo' },\n      ],\n    });\n    const state3 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'Foo' },\n      state2\n    );\n    expect(state3).toEqual(null);\n  });\n\n  it('Handles linking across of deeply nested tabs', () => {\n    const ChildNavigator0 = () => <div />;\n    ChildNavigator0.router = TabRouter({\n      Boo: BareLeafRouteConfig,\n      Baz: BareLeafRouteConfig,\n    });\n    const ChildNavigator1 = () => <div />;\n    ChildNavigator1.router = TabRouter({\n      Zoo: BareLeafRouteConfig,\n      Zap: BareLeafRouteConfig,\n    });\n    const MidNavigator = () => <div />;\n    MidNavigator.router = TabRouter({\n      Fee: { screen: ChildNavigator0 },\n      Bar: { screen: ChildNavigator1 },\n    });\n    const router = TabRouter({\n      Foo: { screen: MidNavigator },\n      Gah: BareLeafRouteConfig,\n    });\n    const state = router.getStateForAction(INIT_ACTION);\n    expect(state).toEqual({\n      index: 0,\n      isTransitioning: false,\n      routes: [\n        {\n          index: 0,\n          key: 'Foo',\n          routeName: 'Foo',\n          isTransitioning: false,\n          routes: [\n            {\n              index: 0,\n              key: 'Fee',\n              routeName: 'Fee',\n              isTransitioning: false,\n              routes: [\n                { key: 'Boo', routeName: 'Boo' },\n                { key: 'Baz', routeName: 'Baz' },\n              ],\n            },\n            {\n              index: 0,\n              key: 'Bar',\n              routeName: 'Bar',\n              isTransitioning: false,\n              routes: [\n                { key: 'Zoo', routeName: 'Zoo' },\n                { key: 'Zap', routeName: 'Zap' },\n              ],\n            },\n          ],\n        },\n        { key: 'Gah', routeName: 'Gah' },\n      ],\n    });\n    const state2 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'Zap' },\n      state\n    );\n    expect(state2).toEqual({\n      index: 0,\n      isTransitioning: false,\n      routes: [\n        {\n          index: 1,\n          key: 'Foo',\n          routeName: 'Foo',\n          isTransitioning: false,\n          routes: [\n            {\n              index: 0,\n              key: 'Fee',\n              routeName: 'Fee',\n              isTransitioning: false,\n              routes: [\n                { key: 'Boo', routeName: 'Boo' },\n                { key: 'Baz', routeName: 'Baz' },\n              ],\n            },\n            {\n              index: 1,\n              key: 'Bar',\n              routeName: 'Bar',\n              isTransitioning: false,\n              routes: [\n                { key: 'Zoo', routeName: 'Zoo' },\n                { key: 'Zap', routeName: 'Zap' },\n              ],\n            },\n          ],\n        },\n        { key: 'Gah', routeName: 'Gah' },\n      ],\n    });\n    const state3 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'Zap' },\n      state2\n    );\n    expect(state3).toEqual(null);\n    const state4 = router.getStateForAction({\n      type: NavigationActions.NAVIGATE,\n      routeName: 'Foo',\n      action: {\n        type: NavigationActions.NAVIGATE,\n        routeName: 'Bar',\n        action: {\n          type: NavigationActions.NAVIGATE,\n          routeName: 'Zap',\n        },\n      },\n    });\n    expect(state4).toEqual({\n      index: 0,\n      isTransitioning: false,\n      routes: [\n        {\n          index: 1,\n          key: 'Foo',\n          routeName: 'Foo',\n          isTransitioning: false,\n          routes: [\n            {\n              index: 0,\n              key: 'Fee',\n              routeName: 'Fee',\n              isTransitioning: false,\n              routes: [\n                { key: 'Boo', routeName: 'Boo' },\n                { key: 'Baz', routeName: 'Baz' },\n              ],\n            },\n            {\n              index: 1,\n              key: 'Bar',\n              routeName: 'Bar',\n              isTransitioning: false,\n              routes: [\n                { key: 'Zoo', routeName: 'Zoo' },\n                { key: 'Zap', routeName: 'Zap' },\n              ],\n            },\n          ],\n        },\n        { key: 'Gah', routeName: 'Gah' },\n      ],\n    });\n  });\n\n  it('Handles path configuration', () => {\n    const ScreenA = () => <div />;\n    const ScreenB = () => <div />;\n    const router = TabRouter({\n      Foo: {\n        path: 'f',\n        screen: ScreenA,\n      },\n      Bar: {\n        path: 'b/:great',\n        screen: ScreenB,\n      },\n    });\n    const params = { foo: '42' };\n    const action = router.getActionForPathAndParams('b/anything', params);\n    const expectedAction = {\n      params: {\n        foo: '42',\n        great: 'anything',\n      },\n      routeName: 'Bar',\n      type: NavigationActions.NAVIGATE,\n    };\n    expect(action).toEqual(expectedAction);\n\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    const expectedState = {\n      index: 0,\n      isTransitioning: false,\n      routes: [\n        { key: 'Foo', routeName: 'Foo' },\n        { key: 'Bar', routeName: 'Bar' },\n      ],\n    };\n    expect(state).toEqual(expectedState);\n    const state2 = router.getStateForAction(expectedAction, state);\n    const expectedState2 = {\n      index: 1,\n      isTransitioning: false,\n      routes: [\n        { key: 'Foo', routeName: 'Foo', params: undefined },\n        {\n          key: 'Bar',\n          routeName: 'Bar',\n          params: { foo: '42', great: 'anything' },\n        },\n      ],\n    };\n    expect(state2).toEqual(expectedState2);\n    expect(router.getComponentForState(expectedState)).toEqual(ScreenA);\n    expect(router.getComponentForState(expectedState2)).toEqual(ScreenB);\n    expect(router.getPathAndParamsForState(expectedState).path).toEqual('f');\n    expect(router.getPathAndParamsForState(expectedState2).path).toEqual(\n      'b/anything'\n    );\n  });\n\n  it('Handles default configuration', () => {\n    const ScreenA = () => <div />;\n    const ScreenB = () => <div />;\n    const router = TabRouter({\n      Foo: {\n        path: '',\n        screen: ScreenA,\n      },\n      Bar: {\n        path: 'b',\n        screen: ScreenB,\n      },\n    });\n    const action = router.getActionForPathAndParams('', { foo: '42' });\n    expect(action).toEqual({\n      params: {\n        foo: '42',\n      },\n      routeName: 'Foo',\n      type: NavigationActions.NAVIGATE,\n    });\n  });\n\n  it('Gets deep path', () => {\n    const ScreenA = () => <div />;\n    const ScreenB = () => <div />;\n    ScreenA.router = TabRouter({\n      Boo: { screen: ScreenB },\n      Baz: { screen: ScreenB },\n    });\n    const router = TabRouter({\n      Foo: {\n        path: 'f',\n        screen: ScreenA,\n      },\n      Bar: {\n        screen: ScreenB,\n      },\n    });\n\n    const state = {\n      index: 0,\n      isTransitioning: false,\n      routes: [\n        {\n          index: 1,\n          key: 'Foo',\n          routeName: 'Foo',\n          isTransitioning: false,\n          routes: [\n            { key: 'Boo', routeName: 'Boo' },\n            { key: 'Baz', routeName: 'Baz' },\n          ],\n        },\n        { key: 'Bar', routeName: 'Bar' },\n      ],\n    };\n    const { path } = router.getPathAndParamsForState(state);\n    expect(path).toEqual('f/Baz');\n  });\n\n  it('Can navigate to other tab (no router) with params', () => {\n    const ScreenA = () => <div />;\n    const ScreenB = () => <div />;\n\n    const router = TabRouter({\n      a: { screen: ScreenA },\n      b: { screen: ScreenB },\n    });\n\n    const state0 = router.getStateForAction(INIT_ACTION);\n\n    expect(state0).toEqual({\n      index: 0,\n      isTransitioning: false,\n      routes: [{ key: 'a', routeName: 'a' }, { key: 'b', routeName: 'b' }],\n    });\n\n    const params = { key: 'value' };\n\n    const state1 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'b', params },\n      state0\n    );\n\n    expect(state1).toEqual({\n      index: 1,\n      isTransitioning: false,\n      routes: [\n        { key: 'a', routeName: 'a' },\n        { key: 'b', routeName: 'b', params },\n      ],\n    });\n  });\n\n  it('Back actions are not propagated to inactive children', () => {\n    const ScreenA = () => <div />;\n    const ScreenB = () => <div />;\n    const ScreenC = () => <div />;\n    const InnerNavigator = () => <div />;\n    InnerNavigator.router = TabRouter({\n      a: { screen: ScreenA },\n      b: { screen: ScreenB },\n    });\n\n    const router = TabRouter(\n      {\n        inner: { screen: InnerNavigator },\n        c: { screen: ScreenC },\n      },\n      {\n        backBehavior: 'none',\n      }\n    );\n\n    const state0 = router.getStateForAction(INIT_ACTION);\n\n    const state1 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'b' },\n      state0\n    );\n\n    const state2 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'c' },\n      state1\n    );\n\n    const state3 = router.getStateForAction(\n      { type: NavigationActions.BACK },\n      state2\n    );\n\n    expect(state3).toEqual(state2);\n  });\n\n  it('Back behavior initialRoute works', () => {\n    const ScreenA = () => <div />;\n    const ScreenB = () => <div />;\n    const router = TabRouter({\n      a: { screen: ScreenA },\n      b: { screen: ScreenB },\n    });\n\n    const state0 = router.getStateForAction(INIT_ACTION);\n\n    const state1 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'b' },\n      state0\n    );\n\n    const state2 = router.getStateForAction(\n      { type: NavigationActions.BACK },\n      state1\n    );\n\n    expect(state2).toEqual(state0);\n  });\n\n  it('Inner actions are only unpacked if the current tab matches', () => {\n    const PlainScreen = () => <div />;\n    const ScreenA = () => <div />;\n    const ScreenB = () => <div />;\n    ScreenB.router = TabRouter({\n      Baz: { screen: PlainScreen },\n      Zoo: { screen: PlainScreen },\n    });\n    ScreenA.router = TabRouter({\n      Bar: { screen: PlainScreen },\n      Boo: { screen: ScreenB },\n    });\n    const router = TabRouter({\n      Foo: { screen: ScreenA },\n    });\n    const screenApreState = {\n      index: 0,\n      key: 'Foo',\n      isTransitioning: false,\n      routeName: 'Foo',\n      routes: [{ key: 'Bar', routeName: 'Bar' }],\n    };\n    const preState = {\n      index: 0,\n      isTransitioning: false,\n      routes: [screenApreState],\n    };\n\n    const comparable = state => {\n      let result = {};\n      if (typeof state.routeName === 'string') {\n        result = { ...result, routeName: state.routeName };\n      }\n      if (state.routes instanceof Array) {\n        result = {\n          ...result,\n          routes: state.routes.map(comparable),\n        };\n      }\n      return result;\n    };\n\n    const action = NavigationActions.navigate({\n      routeName: 'Boo',\n      action: NavigationActions.navigate({ routeName: 'Zoo' }),\n    });\n    const expectedState = ScreenA.router.getStateForAction(\n      action,\n      screenApreState\n    );\n    const state = router.getStateForAction(action, preState);\n    const innerState = state ? state.routes[0] : state;\n\n    expect(innerState.routes[1].index).toEqual(1);\n    expect(expectedState && comparable(expectedState)).toEqual(\n      innerState && comparable(innerState)\n    );\n\n    const noMatchAction = NavigationActions.navigate({\n      routeName: 'Qux',\n      action: NavigationActions.navigate({ routeName: 'Zoo' }),\n    });\n    const expectedState2 = ScreenA.router.getStateForAction(\n      noMatchAction,\n      screenApreState\n    );\n    const state2 = router.getStateForAction(noMatchAction, preState);\n    const innerState2 = state2 ? state2.routes[0] : state2;\n\n    expect(innerState2.routes[1].index).toEqual(0);\n    expect(expectedState2 && comparable(expectedState2)).toEqual(\n      innerState2 && comparable(innerState2)\n    );\n  });\n});\n"]}