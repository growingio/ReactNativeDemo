{"version":3,"sources":["SwitchRouter-test.js"],"names":["React","SwitchRouter","StackRouter","SwitchActions","NavigationActions","describe","it","router","getExampleRouter","state","getStateForAction","type","INIT","state2","NAVIGATE","routeName","expect","routes","index","toEqual","length","state3","resetOnBlur","JUMP_TO","BACK","backBehavior","routeKeyHistory","toBeUndefined","routerHelper","ExampleRouterHelper","getCurrentState","applyAction","toMatchObject","action","subState","activeGrandChildRoute","params","foo","Screen","NestedSwitch","OtherNestedSwitch","nestedRouter","Foo","Bar","otherNestedRouter","initialRouteName","state4","activeState4","MainStack","LoginStack","Home","Profile","Form","ForgotPassword","Login","Main","config","_currentState","_router","PlainScreen","StackA","StackB","StackC","A1","A2","B1","B2","C1","C2","A","screen","path","B","C"],"mappings":"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","sourcesContent":["/* eslint react/display-name:0 */\n\nimport React from 'react';\nimport SwitchRouter from '../SwitchRouter';\nimport StackRouter from '../StackRouter';\nimport * as SwitchActions from '../SwitchActions';\nimport * as NavigationActions from '../../NavigationActions';\n\ndescribe('SwitchRouter', () => {\n  it('resets the route when unfocusing a tab by default', () => {\n    const router = getExampleRouter();\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    const state2 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'A2' },\n      state\n    );\n    expect(state2.routes[0].index).toEqual(1);\n    expect(state2.routes[0].routes.length).toEqual(2);\n\n    const state3 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'B' },\n      state2\n    );\n\n    expect(state3.routes[0].index).toEqual(0);\n    expect(state3.routes[0].routes.length).toEqual(1);\n  });\n\n  it('does not reset the route on unfocus if resetOnBlur is false', () => {\n    const router = getExampleRouter({ resetOnBlur: false });\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    const state2 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'A2' },\n      state\n    );\n    expect(state2.routes[0].index).toEqual(1);\n    expect(state2.routes[0].routes.length).toEqual(2);\n\n    const state3 = router.getStateForAction(\n      { type: NavigationActions.NAVIGATE, routeName: 'B' },\n      state2\n    );\n\n    expect(state3.routes[0].index).toEqual(1);\n    expect(state3.routes[0].routes.length).toEqual(2);\n  });\n\n  it('ignores back by default', () => {\n    const router = getExampleRouter();\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    const state2 = router.getStateForAction(\n      { type: SwitchActions.JUMP_TO, routeName: 'B' },\n      state\n    );\n    expect(state2.index).toEqual(1);\n\n    const state3 = router.getStateForAction(\n      { type: NavigationActions.BACK },\n      state2\n    );\n\n    expect(state3.index).toEqual(1);\n  });\n\n  it('handles initialRoute backBehavior', () => {\n    const router = getExampleRouter({ backBehavior: 'initialRoute' });\n\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    expect(state.routeKeyHistory).toBeUndefined();\n\n    const state2 = router.getStateForAction(\n      { type: SwitchActions.JUMP_TO, routeName: 'B' },\n      state\n    );\n    expect(state2.index).toEqual(1);\n\n    const state3 = router.getStateForAction(\n      { type: NavigationActions.BACK },\n      state2\n    );\n\n    expect(state3.index).toEqual(0);\n  });\n\n  it('handles order backBehavior', () => {\n    const routerHelper = new ExampleRouterHelper({ backBehavior: 'order' });\n    expect(routerHelper.getCurrentState().routeKeyHistory).toBeUndefined();\n\n    expect(\n      routerHelper.applyAction({\n        type: SwitchActions.JUMP_TO,\n        routeName: 'C',\n      })\n    ).toMatchObject({ index: 2 });\n\n    expect(\n      routerHelper.applyAction({ type: NavigationActions.BACK })\n    ).toMatchObject({ index: 1 });\n\n    expect(\n      routerHelper.applyAction({ type: NavigationActions.BACK })\n    ).toMatchObject({ index: 0 });\n\n    expect(\n      routerHelper.applyAction({ type: NavigationActions.BACK })\n    ).toMatchObject({ index: 0 });\n  });\n\n  it('handles history backBehavior', () => {\n    const routerHelper = new ExampleRouterHelper({ backBehavior: 'history' });\n    expect(routerHelper.getCurrentState().routeKeyHistory).toMatchObject(['A']);\n\n    expect(\n      routerHelper.applyAction({\n        type: NavigationActions.NAVIGATE,\n        routeName: 'B',\n      })\n    ).toMatchObject({ index: 1, routeKeyHistory: ['A', 'B'] });\n\n    expect(\n      routerHelper.applyAction({\n        type: NavigationActions.NAVIGATE,\n        routeName: 'A',\n      })\n    ).toMatchObject({ index: 0, routeKeyHistory: ['B', 'A'] });\n\n    expect(\n      routerHelper.applyAction({\n        type: NavigationActions.NAVIGATE,\n        routeName: 'C',\n      })\n    ).toMatchObject({ index: 2, routeKeyHistory: ['B', 'A', 'C'] });\n\n    expect(\n      routerHelper.applyAction({\n        type: NavigationActions.NAVIGATE,\n        routeName: 'A',\n      })\n    ).toMatchObject({ index: 0, routeKeyHistory: ['B', 'C', 'A'] });\n\n    expect(\n      routerHelper.applyAction({ type: NavigationActions.BACK })\n    ).toMatchObject({ index: 2, routeKeyHistory: ['B', 'C'] });\n\n    expect(\n      routerHelper.applyAction({ type: NavigationActions.BACK })\n    ).toMatchObject({ index: 1, routeKeyHistory: ['B'] });\n\n    expect(\n      routerHelper.applyAction({ type: NavigationActions.BACK })\n    ).toMatchObject({ index: 1, routeKeyHistory: ['B'] });\n  });\n\n  it('handles nested actions', () => {\n    const router = getExampleRouter();\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    const state2 = router.getStateForAction(\n      {\n        type: NavigationActions.NAVIGATE,\n        routeName: 'B',\n        action: { type: NavigationActions.NAVIGATE, routeName: 'B2' },\n      },\n      state\n    );\n    const subState = state2.routes[state2.index];\n    const activeGrandChildRoute = subState.routes[subState.index];\n    expect(activeGrandChildRoute.routeName).toEqual('B2');\n  });\n\n  it('handles nested actions and params simultaneously', () => {\n    const router = getExampleRouter();\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    const state2 = router.getStateForAction(\n      {\n        type: NavigationActions.NAVIGATE,\n        routeName: 'B',\n        params: { foo: 'bar' },\n        action: { type: NavigationActions.NAVIGATE, routeName: 'B2' },\n      },\n      state\n    );\n    const subState = state2.routes[state2.index];\n    const activeGrandChildRoute = subState.routes[subState.index];\n    expect(subState.params.foo).toEqual('bar');\n    expect(activeGrandChildRoute.routeName).toEqual('B2');\n  });\n\n  it('order of handling navigate action is correct for nested switchrouters', () => {\n    // router = switch({ Nested: switch({ Foo, Bar }), Other: switch({ Foo }), Bar })\n    // if we are focused on Other and navigate to Bar, what should happen?\n\n    const Screen = () => <div />;\n    const NestedSwitch = () => <div />;\n    const OtherNestedSwitch = () => <div />;\n\n    let nestedRouter = SwitchRouter({ Foo: Screen, Bar: Screen });\n    let otherNestedRouter = SwitchRouter({ Foo: Screen });\n    NestedSwitch.router = nestedRouter;\n    OtherNestedSwitch.router = otherNestedRouter;\n\n    let router = SwitchRouter(\n      {\n        NestedSwitch,\n        OtherNestedSwitch,\n        Bar: Screen,\n      },\n      {\n        initialRouteName: 'OtherNestedSwitch',\n      }\n    );\n\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    expect(state.routes[state.index].routeName).toEqual('OtherNestedSwitch');\n\n    const state2 = router.getStateForAction(\n      {\n        type: NavigationActions.NAVIGATE,\n        routeName: 'Bar',\n      },\n      state\n    );\n    expect(state2.routes[state2.index].routeName).toEqual('Bar');\n\n    const state3 = router.getStateForAction(\n      {\n        type: NavigationActions.NAVIGATE,\n        routeName: 'NestedSwitch',\n      },\n      state2\n    );\n    const state4 = router.getStateForAction(\n      {\n        type: NavigationActions.NAVIGATE,\n        routeName: 'Bar',\n      },\n      state3\n    );\n    let activeState4 = state4.routes[state4.index];\n    expect(activeState4.routeName).toEqual('NestedSwitch');\n    expect(activeState4.routes[activeState4.index].routeName).toEqual('Bar');\n  });\n\n  // https://github.com/react-navigation/react-navigation.github.io/issues/117#issuecomment-385597628\n  it('order of handling navigate action is correct for nested stackrouters', () => {\n    const Screen = () => <div />;\n    const MainStack = () => <div />;\n    const LoginStack = () => <div />;\n    MainStack.router = StackRouter({ Home: Screen, Profile: Screen });\n    LoginStack.router = StackRouter({ Form: Screen, ForgotPassword: Screen });\n\n    let router = SwitchRouter(\n      {\n        Home: Screen,\n        Login: LoginStack,\n        Main: MainStack,\n      },\n      {\n        initialRouteName: 'Login',\n      }\n    );\n\n    const state = router.getStateForAction({ type: NavigationActions.INIT });\n    expect(state.routes[state.index].routeName).toEqual('Login');\n\n    const state2 = router.getStateForAction(\n      {\n        type: SwitchActions.JUMP_TO,\n        routeName: 'Home',\n      },\n      state\n    );\n    expect(state2.routes[state2.index].routeName).toEqual('Home');\n  });\n});\n\n// A simple helper that makes it easier to write basic routing tests\n// As we generally want to apply one action after the other,\n// it's often convenient to manipulate a structure that keeps the router state\nclass ExampleRouterHelper {\n  constructor(config) {\n    this._router = getExampleRouter(config);\n    this._currentState = this._router.getStateForAction({\n      type: NavigationActions.INIT,\n    });\n  }\n\n  applyAction = action => {\n    this._currentState = this._router.getStateForAction(\n      action,\n      this._currentState\n    );\n    return this._currentState;\n  };\n\n  getCurrentState = () => this._currentState;\n}\n\nconst getExampleRouter = (config = {}) => {\n  const PlainScreen = () => <div />;\n  const StackA = () => <div />;\n  const StackB = () => <div />;\n  const StackC = () => <div />;\n\n  StackA.router = StackRouter({\n    A1: PlainScreen,\n    A2: PlainScreen,\n  });\n\n  StackB.router = StackRouter({\n    B1: PlainScreen,\n    B2: PlainScreen,\n  });\n\n  StackC.router = StackRouter({\n    C1: PlainScreen,\n    C2: PlainScreen,\n  });\n\n  const router = SwitchRouter(\n    {\n      A: {\n        screen: StackA,\n        path: '',\n      },\n      B: {\n        screen: StackB,\n        path: 'great/path',\n      },\n      C: {\n        screen: StackC,\n        path: 'pathC',\n      },\n    },\n    {\n      initialRouteName: 'A',\n      ...config,\n    }\n  );\n\n  return router;\n};\n"]}