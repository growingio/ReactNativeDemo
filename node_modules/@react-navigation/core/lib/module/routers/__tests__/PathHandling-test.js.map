{"version":3,"sources":["PathHandling-test.js"],"names":["React","SwitchRouter","StackRouter","TabRouter","NavigationActions","_TESTING_ONLY_normalize_keys","beforeEach","performRouterTest","createTestRouter","ListScreen","ProfileNavigator","router","list","path","screen","MainNavigator","profile","LoginScreen","AuthNavigator","login","BarScreen","FooNavigator","Component","bar","PersonScreen","testRouter","main","baz","auth","person","foo","it","Foo","Bar","initialRouteName","initialRouteParams","action","getActionForPathAndParams","expect","toEqual","state","getStateForAction","init","routes","index","objectContaining","routeName","params","Person","Task","ThingA","Thing","type","NAVIGATE","task","action1","action2","good","thing","action3","something","ScreenA","Baz","action0","toBe","state1","ScreenB","ScreenC","Empty","A","B","C","id","Boo","Quo","Qux","Boo2","key","bazId","getPathAndParamsForState","uri","malformedUri","s","out","code","paths","describe","AScreen","DocsNavigator","Docs","D","performRouteNameAsPathDisabledTest","BScreen","NestedNavigator","disableRouteNamePaths"],"mappings":"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","sourcesContent":["/* eslint no-shadow:0, react/no-multi-comp:0, react/display-name:0 */\n\nimport React from 'react';\n\nimport SwitchRouter from '../SwitchRouter';\nimport StackRouter from '../StackRouter';\nimport TabRouter from '../TabRouter';\nimport * as NavigationActions from '../../NavigationActions';\nimport { _TESTING_ONLY_normalize_keys } from '../KeyGenerator.ts';\n\nbeforeEach(() => {\n  _TESTING_ONLY_normalize_keys();\n});\n\nconst performRouterTest = createTestRouter => {\n  const ListScreen = () => <div />;\n\n  const ProfileNavigator = () => <div />;\n  ProfileNavigator.router = StackRouter({\n    list: {\n      path: 'list/:id',\n      screen: ListScreen,\n    },\n  });\n\n  const MainNavigator = () => <div />;\n  MainNavigator.router = StackRouter({\n    profile: {\n      path: 'p/:id',\n      screen: ProfileNavigator,\n    },\n  });\n\n  const LoginScreen = () => <div />;\n\n  const AuthNavigator = () => <div />;\n  AuthNavigator.router = StackRouter({\n    login: {\n      screen: LoginScreen,\n    },\n  });\n\n  const BarScreen = () => <div />;\n\n  class FooNavigator extends React.Component {\n    static router = StackRouter({\n      bar: {\n        path: 'b/:barThing',\n        screen: BarScreen,\n      },\n    });\n    render() {\n      return <div />;\n    }\n  }\n\n  const PersonScreen = () => <div />;\n\n  const testRouter = createTestRouter({\n    main: {\n      screen: MainNavigator,\n    },\n    baz: {\n      path: null,\n      screen: FooNavigator,\n    },\n    auth: {\n      screen: AuthNavigator,\n    },\n    person: {\n      path: 'people/:id',\n      screen: PersonScreen,\n    },\n    foo: {\n      path: 'fo/:fooThing',\n      screen: FooNavigator,\n    },\n  });\n\n  it('Handles empty URIs with empty action', () => {\n    const router = createTestRouter(\n      {\n        Foo: {\n          screen: () => <div />,\n        },\n        Bar: {\n          screen: () => <div />,\n        },\n      },\n      { initialRouteName: 'Bar', initialRouteParams: { foo: 42 } }\n    );\n    const action = router.getActionForPathAndParams('');\n    expect(action).toEqual(null);\n    const state = router.getStateForAction(action || NavigationActions.init());\n    expect(state.routes[state.index]).toEqual(\n      expect.objectContaining({\n        routeName: 'Bar',\n        params: { foo: 42 },\n      })\n    );\n  });\n\n  it('Handles paths with several params', () => {\n    const router = createTestRouter({\n      Person: {\n        path: 'people/:person',\n        screen: () => <div />,\n      },\n      Task: {\n        path: 'people/:person/tasks/:task',\n        screen: () => <div />,\n      },\n      ThingA: {\n        path: 'things/:good',\n        screen: () => <div />,\n      },\n      Thing: {\n        path: 'things/:good/:thing',\n        screen: () => <div />,\n      },\n    });\n    const action = router.getActionForPathAndParams(\n      'people/brent/tasks/everything'\n    );\n    expect(action).toEqual({\n      type: NavigationActions.NAVIGATE,\n      routeName: 'Task',\n      params: { person: 'brent', task: 'everything' },\n    });\n\n    const action1 = router.getActionForPathAndParams('people/lucy');\n    expect(action1).toEqual({\n      type: NavigationActions.NAVIGATE,\n      routeName: 'Person',\n      params: { person: 'lucy' },\n    });\n\n    const action2 = router.getActionForPathAndParams('things/foo/bar');\n    expect(action2).toEqual({\n      type: NavigationActions.NAVIGATE,\n      routeName: 'Thing',\n      params: { good: 'foo', thing: 'bar' },\n    });\n\n    const action3 = router.getActionForPathAndParams('things/foo');\n    expect(action3).toEqual({\n      type: NavigationActions.NAVIGATE,\n      routeName: 'ThingA',\n      params: { good: 'foo' },\n    });\n  });\n\n  it('Handles empty path configuration', () => {\n    const router = createTestRouter({\n      Foo: {\n        screen: () => <div />,\n      },\n      Bar: {\n        screen: () => <div />,\n        path: '',\n      },\n    });\n    const action = router.getActionForPathAndParams('');\n    expect(action).toEqual({\n      type: NavigationActions.NAVIGATE,\n      routeName: 'Bar',\n      params: {},\n    });\n  });\n\n  it('Handles wildcard path configuration', () => {\n    const router = createTestRouter({\n      Foo: {\n        screen: () => <div />,\n      },\n      Bar: {\n        screen: () => <div />,\n        path: ':something',\n      },\n    });\n    const action = router.getActionForPathAndParams('');\n    expect(action).toEqual(null);\n\n    const action1 = router.getActionForPathAndParams('Foo');\n    expect(action1).toEqual({\n      type: NavigationActions.NAVIGATE,\n      routeName: 'Foo',\n      params: {},\n    });\n    const action2 = router.getActionForPathAndParams('asdf');\n    expect(action2).toEqual({\n      type: NavigationActions.NAVIGATE,\n      routeName: 'Bar',\n      params: { something: 'asdf' },\n    });\n  });\n\n  it('Null path behavior', () => {\n    const ScreenA = () => <div />;\n    const router = createTestRouter({\n      Bar: {\n        screen: ScreenA,\n      },\n      Foo: {\n        path: null,\n        screen: ScreenA,\n      },\n      Baz: {\n        path: '',\n        screen: ScreenA,\n      },\n    });\n    const action0 = router.getActionForPathAndParams('test/random', {});\n    expect(action0).toBe(null);\n\n    const action1 = router.getActionForPathAndParams('', {});\n    expect(action1.routeName).toBe('Baz');\n    const state1 = router.getStateForAction(action1);\n    expect(state1.routes[state1.index].routeName).toBe('Baz');\n  });\n\n  it('Multiple null path sub routers path behavior', () => {\n    const ScreenA = () => <div />;\n    const ScreenB = () => <div />;\n    ScreenB.router = createTestRouter({\n      Foo: ScreenA,\n    });\n    const ScreenC = () => <div />;\n    ScreenC.router = createTestRouter({\n      Bar: {\n        path: 'bar/:id',\n        screen: ScreenA,\n      },\n      Empty: {\n        path: '',\n        screen: ScreenA,\n      },\n    });\n    const router = createTestRouter({\n      A: {\n        screen: ScreenA,\n      },\n      B: {\n        path: null,\n        screen: ScreenB,\n      },\n      C: {\n        path: null,\n        screen: ScreenC,\n      },\n    });\n    const action0 = router.getActionForPathAndParams('Foo', {});\n    expect(action0.routeName).toBe('B');\n    expect(action0.action.routeName).toBe('Foo');\n\n    const action1 = router.getActionForPathAndParams('', {});\n    expect(action1.routeName).toBe('C');\n    expect(action1.action.routeName).toBe('Empty');\n\n    const action2 = router.getActionForPathAndParams('A', {});\n    expect(action2.routeName).toBe('A');\n\n    const action3 = router.getActionForPathAndParams('bar/asdf', {});\n    expect(action3.routeName).toBe('C');\n    expect(action3.action.routeName).toBe('Bar');\n    expect(action3.action.params.id).toBe('asdf');\n  });\n\n  it('Null and empty string path sub routers behavior', () => {\n    const ScreenA = () => <div />;\n    const ScreenB = () => <div />;\n    ScreenB.router = createTestRouter({\n      Foo: ScreenA,\n      Baz: {\n        screen: ScreenA,\n        path: '',\n      },\n    });\n    const ScreenC = () => <div />;\n    ScreenC.router = createTestRouter({\n      Boo: ScreenA,\n      Bar: ScreenA,\n      Baz: {\n        screen: ScreenA,\n        path: '',\n      },\n    });\n    const router = createTestRouter({\n      B: {\n        path: null,\n        screen: ScreenB,\n      },\n      C: {\n        path: '',\n        screen: ScreenC,\n      },\n    });\n    const action0 = router.getActionForPathAndParams('', {});\n    expect(action0.routeName).toBe('C');\n    expect(action0.action.routeName).toBe('Baz');\n\n    const action1 = router.getActionForPathAndParams('Foo', {});\n    expect(action1.routeName).toBe('B');\n    expect(action1.action.routeName).toBe('Foo');\n\n    const action2 = router.getActionForPathAndParams('Bar', {});\n    expect(action2.routeName).toBe('C');\n    expect(action2.action.routeName).toBe('Bar');\n\n    const action3 = router.getActionForPathAndParams('unknown', {});\n    expect(action3).toBe(null);\n  });\n\n  it('Empty path acts as wildcard for nested router', () => {\n    const ScreenA = () => <div />;\n    const Foo = () => <div />;\n    const ScreenC = () => <div />;\n    ScreenC.router = createTestRouter({\n      Boo: ScreenA,\n      Bar: ScreenA,\n    });\n    Foo.router = createTestRouter({\n      Quo: ScreenA,\n      Qux: {\n        screen: ScreenC,\n        path: '',\n      },\n    });\n    const router = createTestRouter({\n      Bar: {\n        screen: ScreenA,\n      },\n      Foo,\n    });\n    const action0 = router.getActionForPathAndParams('Foo/Bar', {});\n    expect(action0.routeName).toBe('Foo');\n    expect(action0.action.routeName).toBe('Qux');\n    expect(action0.action.action.routeName).toBe('Bar');\n  });\n\n  it('Gets deep path with pure wildcard match', () => {\n    const ScreenA = () => <div />;\n    const ScreenB = () => <div />;\n    const ScreenC = () => <div />;\n    ScreenA.router = createTestRouter({\n      Boo: { path: 'boo', screen: ScreenC },\n      Baz: { path: 'baz/:bazId', screen: ScreenB },\n    });\n    ScreenC.router = createTestRouter({\n      Boo2: { path: '', screen: ScreenB },\n    });\n    const router = createTestRouter({\n      Foo: {\n        path: null,\n        screen: ScreenA,\n      },\n      Bar: {\n        screen: ScreenB,\n      },\n    });\n\n    {\n      const state = {\n        index: 0,\n        routes: [\n          {\n            index: 1,\n            key: 'Foo',\n            routeName: 'Foo',\n            params: {\n              id: '123',\n            },\n            routes: [\n              {\n                index: 0,\n                key: 'Boo',\n                routeName: 'Boo',\n                routes: [{ key: 'Boo2', routeName: 'Boo2' }],\n              },\n              { key: 'Baz', routeName: 'Baz', params: { bazId: '321' } },\n            ],\n          },\n          { key: 'Bar', routeName: 'Bar' },\n        ],\n      };\n      const { path, params } = router.getPathAndParamsForState(state);\n      expect(path).toEqual('baz/321');\n      expect(params.id).toEqual('123');\n    }\n\n    {\n      const state = {\n        index: 0,\n        routes: [\n          {\n            index: 0,\n            key: 'Foo',\n            routeName: 'Foo',\n            params: {\n              id: '123',\n            },\n            routes: [\n              {\n                index: 0,\n                key: 'Boo',\n                routeName: 'Boo',\n                routes: [{ key: 'Boo2', routeName: 'Boo2' }],\n              },\n              { key: 'Baz', routeName: 'Baz', params: { bazId: '321' } },\n            ],\n          },\n          { key: 'Bar', routeName: 'Bar' },\n        ],\n      };\n      const { path, params } = router.getPathAndParamsForState(state);\n      expect(path).toEqual('boo');\n      expect(params).toEqual({ id: '123' });\n    }\n  });\n\n  it('URI encoded string get passed to deep link', () => {\n    const uri = 'people/2018%2F02%2F07';\n    const action = testRouter.getActionForPathAndParams(uri);\n    expect(action).toEqual({\n      routeName: 'person',\n      params: {\n        id: '2018/02/07',\n      },\n      type: NavigationActions.NAVIGATE,\n    });\n\n    const malformedUri = 'people/%E0%A4%A';\n    const action2 = testRouter.getActionForPathAndParams(malformedUri);\n    expect(action2).toEqual({\n      routeName: 'person',\n      params: {\n        id: '%E0%A4%A',\n      },\n      type: NavigationActions.NAVIGATE,\n    });\n  });\n\n  it('URI encoded path param gets parsed and correctly printed', () => {\n    const action = testRouter.getActionForPathAndParams('people/Henry%20L');\n    expect(action).toEqual({\n      routeName: 'person',\n      params: {\n        id: 'Henry L',\n      },\n      type: NavigationActions.NAVIGATE,\n    });\n    const s = testRouter.getStateForAction(action);\n    const out = testRouter.getPathAndParamsForState(s);\n    expect(out.path).toEqual('people/Henry%20L');\n    expect(out.params).toEqual({});\n  });\n\n  it('Querystring params get passed to nested deep link', () => {\n    const action = testRouter.getActionForPathAndParams(\n      'main/p/4/list/10259959195',\n      { code: 'test', foo: 'bar' }\n    );\n    expect(action).toEqual({\n      type: NavigationActions.NAVIGATE,\n      routeName: 'main',\n      params: {\n        code: 'test',\n        foo: 'bar',\n      },\n      action: {\n        type: NavigationActions.NAVIGATE,\n        routeName: 'profile',\n        params: {\n          id: '4',\n          code: 'test',\n          foo: 'bar',\n        },\n        action: {\n          type: NavigationActions.NAVIGATE,\n          routeName: 'list',\n          params: {\n            id: '10259959195',\n            code: 'test',\n            foo: 'bar',\n          },\n        },\n      },\n    });\n\n    const action2 = testRouter.getActionForPathAndParams(\n      'main/p/4/list/10259959195',\n      { code: '', foo: 'bar' }\n    );\n    expect(action2).toEqual({\n      type: NavigationActions.NAVIGATE,\n      routeName: 'main',\n      params: {\n        code: '',\n        foo: 'bar',\n      },\n      action: {\n        type: NavigationActions.NAVIGATE,\n        routeName: 'profile',\n        params: {\n          id: '4',\n          code: '',\n          foo: 'bar',\n        },\n        action: {\n          type: NavigationActions.NAVIGATE,\n          routeName: 'list',\n          params: {\n            id: '10259959195',\n            code: '',\n            foo: 'bar',\n          },\n        },\n      },\n    });\n  });\n\n  it('paths option on router overrides path from route config', () => {\n    const router = createTestRouter(\n      {\n        main: {\n          screen: MainNavigator,\n        },\n        baz: {\n          path: null,\n          screen: FooNavigator,\n        },\n      },\n      { paths: { baz: 'overridden' } }\n    );\n    const action = router.getActionForPathAndParams('overridden', {});\n    expect(action.type).toEqual(NavigationActions.NAVIGATE);\n    expect(action.routeName).toEqual('baz');\n  });\n\n  it('paths option set as null on router overrides path from route config', () => {\n    const router = createTestRouter(\n      {\n        main: {\n          screen: MainNavigator,\n        },\n        baz: {\n          path: 'bazPath',\n          screen: FooNavigator,\n        },\n      },\n      { paths: { baz: null } }\n    );\n    const action = router.getActionForPathAndParams('b/noBaz', {});\n    expect(action.type).toEqual(NavigationActions.NAVIGATE);\n    expect(action.routeName).toEqual('baz');\n  });\n};\n\ndescribe('Path handling for stack router', () => {\n  performRouterTest(StackRouter);\n});\ndescribe('Path handling for switch router', () => {\n  performRouterTest(SwitchRouter);\n});\n\nit('Handles nested switch routers', () => {\n  const AScreen = () => <div />;\n  const DocsNavigator = () => <div />;\n  DocsNavigator.router = SwitchRouter({\n    A: AScreen,\n    B: AScreen,\n    C: AScreen,\n  });\n  DocsNavigator.path = 'docs';\n  const router = SwitchRouter({\n    Docs: DocsNavigator,\n    D: AScreen,\n  });\n  const action = router.getActionForPathAndParams('docs/B', {});\n\n  expect(action.type).toEqual(NavigationActions.NAVIGATE);\n  expect(action.routeName).toEqual('Docs');\n  expect(action.action.type).toEqual(NavigationActions.NAVIGATE);\n  expect(action.action.routeName).toEqual('B');\n});\n\nconst performRouteNameAsPathDisabledTest = createTestRouter => {\n  const BScreen = () => <div />;\n  const NestedNavigator = () => <div />;\n  NestedNavigator.router = createTestRouter({\n    B: {\n      screen: BScreen,\n      path: 'baz',\n    },\n  });\n  const router = createTestRouter(\n    {\n      A: NestedNavigator,\n    },\n    { disableRouteNamePaths: true }\n  );\n\n  it('disableRouteNamePaths option on router prevent the default path to be the routeName', () => {\n    const action = router.getActionForPathAndParams('baz', {});\n\n    expect(action.routeName).toBe('A');\n    expect(action.action.routeName).toBe('B');\n  });\n};\n\ndescribe('Stack router handles disableRouteNamePaths', () => {\n  performRouteNameAsPathDisabledTest(StackRouter);\n});\n\ndescribe('Switch router handles disableRouteNamePaths', () => {\n  performRouteNameAsPathDisabledTest(SwitchRouter);\n});\n\ndescribe('Tab router handles disableRouteNamePaths', () => {\n  performRouteNameAsPathDisabledTest(TabRouter);\n});\n"]}