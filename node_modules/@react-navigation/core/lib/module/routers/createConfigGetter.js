import _objectSpread from"@babel/runtime/helpers/objectSpread";import invariant from'../utils/invariant';import getScreenForRouteName from'./getScreenForRouteName';import validateScreenOptions from'./validateScreenOptions';function applyConfig(configurer,navigationOptions,configProps){if(typeof configurer==='function'){return _objectSpread({},navigationOptions,configurer(_objectSpread({},configProps,{navigationOptions:navigationOptions})));}if(typeof configurer==='object'){return _objectSpread({},navigationOptions,configurer);}return navigationOptions;}export default(function(routeConfigs,navigatorScreenConfig){return function(navigation,screenProps){var state=navigation.state;var route=state;invariant(route.routeName&&typeof route.routeName==='string','Cannot get config because the route does not have a routeName.');var Component=getScreenForRouteName(routeConfigs,route.routeName);var routeConfig=routeConfigs[route.routeName];var routeScreenConfig=routeConfig===Component?null:routeConfig.navigationOptions;var componentScreenConfig=Component.navigationOptions;var configOptions={navigation:navigation,screenProps:screenProps||{}};var outputConfig=applyConfig(navigatorScreenConfig,{},configOptions);outputConfig=applyConfig(componentScreenConfig,outputConfig,configOptions);outputConfig=applyConfig(routeScreenConfig,outputConfig,configOptions);validateScreenOptions(outputConfig,route);return outputConfig;};});
//# sourceMappingURL=createConfigGetter.js.map