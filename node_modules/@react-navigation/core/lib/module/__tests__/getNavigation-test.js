import getNavigation from'../getNavigation';it('getNavigation provides default action helpers',function(){var router={getActionCreators:function getActionCreators(){return{};},getStateForAction:function getStateForAction(action){var lastState=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return lastState;}};var dispatch=jest.fn();var topNav=getNavigation(router,{},dispatch,new Set(),function(){return{};},function(){return topNav;});topNav.navigate('GreatRoute');expect(dispatch.mock.calls.length).toBe(1);expect(dispatch.mock.calls[0][0].type).toBe('Navigation/NAVIGATE');expect(dispatch.mock.calls[0][0].routeName).toBe('GreatRoute');});it('getNavigation provides router action helpers',function(){var router={getActionCreators:function getActionCreators(){return{foo:function foo(bar){return{type:'FooBarAction',bar:bar};}};},getStateForAction:function getStateForAction(action){var lastState=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return lastState;}};var dispatch=jest.fn();var topNav=getNavigation(router,{},dispatch,new Set(),function(){return{};},function(){return topNav;});topNav.foo('Great');expect(dispatch.mock.calls.length).toBe(1);expect(dispatch.mock.calls[0][0].type).toBe('FooBarAction');expect(dispatch.mock.calls[0][0].bar).toBe('Great');});it('getNavigation get child navigation with router',function(){var actionSubscribers=new Set();var navigation=null;var routerA={getActionCreators:function getActionCreators(){return{};},getStateForAction:function getStateForAction(action){var lastState=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return lastState;}};var router={childRouters:{RouteA:routerA},getActionCreators:function getActionCreators(){return{};},getStateForAction:function getStateForAction(action){var lastState=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return lastState;}};var initState={index:0,routes:[{key:'a',routeName:'RouteA',routes:[{key:'c',routeName:'RouteC'}],index:0},{key:'b',routeName:'RouteB'}]};var topNav=getNavigation(router,initState,function(){},actionSubscribers,function(){return{};},function(){return navigation;});var childNavA=topNav.getChildNavigation('a');expect(childNavA.router).toBe(routerA);});
//# sourceMappingURL=getNavigation-test.js.map