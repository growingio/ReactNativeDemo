{"version":3,"sources":["HeaderBackButton.tsx"],"names":["HeaderBackButton","state","handleTextLayout","e","initialTextWidth","setState","nativeEvent","layout","x","width","getTitleText","props","title","truncatedTitle","backImage","backTitleVisible","tintColor","React","isValidElement","BackImage","styles","icon","iconWithTitle","defaultBackImage","allowFontScaling","titleStyle","backTitleText","color","onPress","pressColorAndroid","disabled","button","undefined","container","renderBackImage","maybeRenderTitle","Platform","OS","androidButtonWrapper","PureComponent","defaultProps","select","ios","web","BackButtonWeb","StyleSheet","create","opacity","margin","backgroundColor","marginLeft","default","alignItems","flexDirection","fontSize","paddingRight","height","marginRight","marginVertical","resizeMode","transform","scaleX","I18nManager","isRTL"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  Image,\n  Text,\n  View,\n  Platform,\n  StyleSheet,\n  LayoutChangeEvent,\n} from 'react-native';\n\nimport TouchableItem from '../TouchableItem';\n\nimport defaultBackImage from '../assets/back-icon.png';\nimport BackButtonWeb from './BackButtonWeb';\nimport { HeaderBackbuttonProps } from '../../types';\n\ntype State = {\n  initialTextWidth?: number;\n};\n\nclass HeaderBackButton extends React.PureComponent<\n  HeaderBackbuttonProps,\n  State\n> {\n  static defaultProps = {\n    pressColorAndroid: 'rgba(0, 0, 0, .32)',\n    tintColor: Platform.select({\n      ios: '#037aff',\n      web: '#5f6368',\n    }),\n    truncatedTitle: 'Back',\n    backImage: Platform.select({\n      web: BackButtonWeb,\n    }),\n  };\n\n  state: State = {};\n\n  private handleTextLayout = (e: LayoutChangeEvent) => {\n    if (this.state.initialTextWidth) {\n      return;\n    }\n    this.setState({\n      initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width,\n    });\n  };\n\n  private renderBackImage() {\n    const { backImage, backTitleVisible, tintColor } = this.props;\n\n    let title = this.getTitleText();\n\n    if (React.isValidElement(backImage)) {\n      return backImage;\n    } else if (backImage) {\n      const BackImage = backImage;\n\n      return <BackImage tintColor={tintColor} title={title} />;\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            !!backTitleVisible && styles.iconWithTitle,\n            !!tintColor && { tintColor },\n          ]}\n          source={defaultBackImage}\n          fadeDuration={0}\n        />\n      );\n    }\n  }\n\n  private getTitleText = () => {\n    const { width, title, truncatedTitle } = this.props;\n\n    let { initialTextWidth } = this.state;\n\n    if (title === null) {\n      return null;\n    } else if (!title) {\n      return truncatedTitle;\n    } else if (initialTextWidth && width && initialTextWidth > width) {\n      return truncatedTitle;\n    } else {\n      return title;\n    }\n  };\n\n  private maybeRenderTitle() {\n    const {\n      allowFontScaling,\n      backTitleVisible,\n      titleStyle,\n      tintColor,\n    } = this.props;\n    let backTitleText = this.getTitleText();\n\n    if (!backTitleVisible || backTitleText === null) {\n      return null;\n    }\n\n    return (\n      <Text\n        accessible={false}\n        onLayout={this.handleTextLayout}\n        style={[styles.title, !!tintColor && { color: tintColor }, titleStyle]}\n        numberOfLines={1}\n        allowFontScaling={!!allowFontScaling}\n      >\n        {this.getTitleText()}\n      </Text>\n    );\n  }\n\n  render() {\n    const { onPress, pressColorAndroid, title, disabled } = this.props;\n\n    let button = (\n      <TouchableItem\n        disabled={disabled}\n        accessible\n        accessibilityRole=\"button\"\n        accessibilityComponentType=\"button\"\n        accessibilityLabel={title ? `${title}, back` : 'Go back'}\n        accessibilityTraits=\"button\"\n        testID=\"header-back\"\n        delayPressIn={0}\n        onPress={disabled ? undefined : onPress}\n        pressColor={pressColorAndroid}\n        style={[styles.container, disabled && styles.disabled]}\n        borderless\n      >\n        <View style={styles.container}>\n          {this.renderBackImage()}\n          {this.maybeRenderTitle()}\n        </View>\n      </TouchableItem>\n    );\n\n    if (Platform.OS === 'ios') {\n      return button;\n    } else {\n      return <View style={styles.androidButtonWrapper}>{button}</View>;\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  disabled: {\n    opacity: 0.5,\n  },\n  androidButtonWrapper: {\n    margin: 13,\n    backgroundColor: 'transparent',\n    ...Platform.select({\n      web: {\n        marginLeft: 21,\n      },\n      default: {},\n    }),\n  },\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    fontSize: 17,\n    paddingRight: 10,\n  },\n  icon: Platform.select({\n    ios: {\n      backgroundColor: 'transparent',\n      height: 21,\n      width: 13,\n      marginLeft: 9,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      backgroundColor: 'transparent',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithTitle:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n});\n\nexport default HeaderBackButton;\n"]}