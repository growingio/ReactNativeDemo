{"version":3,"sources":["ModularHeaderBackButton.tsx"],"names":["ModularHeaderBackButton","state","onTextLayout","e","initialTextWidth","setState","nativeEvent","layout","x","width","getTitleText","props","title","truncatedTitle","length","backImage","backTitleVisible","tintColor","React","isValidElement","BackImage","styles","icon","iconWithTitle","defaultBackImage","titleStyle","backTitleText","LabelContainerComponent","color","onPress","ButtonContainerComponent","container","renderBackImage","maybeRenderTitle","PureComponent","defaultProps","StyleSheet","create","alignItems","flexDirection","backgroundColor","marginBottom","overflow","fontSize","paddingRight","height","marginLeft","marginRight","marginVertical","resizeMode","transform","scaleX","I18nManager","isRTL"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  Image,\n  Text,\n  View,\n  StyleSheet,\n  LayoutChangeEvent,\n} from 'react-native';\n\nimport TouchableItem from '../TouchableItem';\n\nimport defaultBackImage from '../assets/back-icon.png';\nimport { HeaderBackbuttonProps } from '../../types';\n\ntype Props = HeaderBackbuttonProps & {\n  LabelContainerComponent: React.ComponentType;\n  ButtonContainerComponent: React.ComponentType;\n};\n\ntype State = {\n  initialTextWidth?: number;\n};\n\nclass ModularHeaderBackButton extends React.PureComponent<Props, State> {\n  static defaultProps = {\n    tintColor: '#037aff',\n    truncatedTitle: 'Back',\n  };\n\n  state: State = {};\n\n  private onTextLayout = (e: LayoutChangeEvent) => {\n    if (this.state.initialTextWidth) {\n      return;\n    }\n    this.setState({\n      initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width,\n    });\n  };\n\n  private renderBackImage() {\n    const { backImage, backTitleVisible, tintColor } = this.props;\n\n    if (React.isValidElement(backImage)) {\n      return backImage;\n    } else if (backImage) {\n      const BackImage = backImage;\n\n      return <BackImage tintColor={tintColor} />;\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            !!backTitleVisible && styles.iconWithTitle,\n            !!tintColor && { tintColor },\n          ]}\n          source={defaultBackImage}\n        />\n      );\n    }\n  }\n\n  private getTitleText = () => {\n    const { width, title, truncatedTitle } = this.props;\n\n    let { initialTextWidth } = this.state;\n\n    if (title === null) {\n      return null;\n    } else if (!title) {\n      return truncatedTitle;\n    } else if (initialTextWidth && width && initialTextWidth > width) {\n      return truncatedTitle;\n    } else {\n      return title.length > 8 ? truncatedTitle : title;\n    }\n  };\n\n  private maybeRenderTitle() {\n    const { backTitleVisible, titleStyle, tintColor } = this.props;\n    let backTitleText = this.getTitleText();\n\n    if (!backTitleVisible || backTitleText === null) {\n      return null;\n    }\n\n    const { LabelContainerComponent } = this.props;\n\n    return (\n      <LabelContainerComponent>\n        <Text\n          accessible={false}\n          onLayout={this.onTextLayout}\n          style={[\n            styles.title,\n            !!tintColor && { color: tintColor },\n            titleStyle,\n          ]}\n          numberOfLines={1}\n        >\n          {this.getTitleText()}\n        </Text>\n      </LabelContainerComponent>\n    );\n  }\n\n  render() {\n    const { onPress, title } = this.props;\n    const { ButtonContainerComponent } = this.props;\n\n    return (\n      <TouchableItem\n        accessibilityComponentType=\"button\"\n        accessibilityLabel={title ? `${title}, back` : 'Go back'}\n        accessibilityTraits=\"button\"\n        testID=\"header-back\"\n        delayPressIn={0}\n        onPress={onPress}\n        style={styles.container}\n        borderless\n      >\n        <View style={styles.container}>\n          <ButtonContainerComponent>\n            {this.renderBackImage()}\n          </ButtonContainerComponent>\n          {this.maybeRenderTitle()}\n        </View>\n      </TouchableItem>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    backgroundColor: 'transparent',\n    marginBottom: 1,\n    overflow: 'visible',\n  },\n  title: {\n    fontSize: 17,\n    paddingRight: 10,\n  },\n  icon: {\n    height: 21,\n    width: 12,\n    marginLeft: 9,\n    marginRight: 22,\n    marginVertical: 12,\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n  iconWithTitle: {\n    marginRight: 3,\n  },\n});\n\nexport default ModularHeaderBackButton;\n"]}