import _objectSpread from"@babel/runtime/helpers/objectSpread";import _extends from"@babel/runtime/helpers/extends";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";import _classCallCheck from"@babel/runtime/helpers/classCallCheck";import _createClass from"@babel/runtime/helpers/createClass";import _possibleConstructorReturn from"@babel/runtime/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime/helpers/getPrototypeOf";import _inherits from"@babel/runtime/helpers/inherits";var _jsxFileName="/Users/brentvatne/coding/react-navigation-stack/src/views/StackView/StackViewCard.tsx";import*as React from'react';import{Animated,StyleSheet,Platform}from'react-native';import{Screen}from'react-native-screens';import createPointerEventsContainer from'./createPointerEventsContainer';var EPS=1e-5;function getAccessibilityProps(isActive){if(Platform.OS==='ios'){return{accessibilityElementsHidden:!isActive};}else if(Platform.OS==='android'){return{importantForAccessibility:isActive?'yes':'no-hide-descendants'};}else{return{};}}var Card=function(_React$Component){_inherits(Card,_React$Component);function Card(){_classCallCheck(this,Card);return _possibleConstructorReturn(this,_getPrototypeOf(Card).apply(this,arguments));}_createClass(Card,[{key:"render",value:function render(){var _this$props=this.props,children=_this$props.children,pointerEvents=_this$props.pointerEvents,style=_this$props.style,position=_this$props.position,transparent=_this$props.transparent,_this$props$scene=_this$props.scene,index=_this$props$scene.index,isActive=_this$props$scene.isActive;var active=Platform.select({web:isActive,default:transparent||isActive?1:position.interpolate({inputRange:[index,index+1-EPS,index+1],outputRange:[1,1,0],extrapolate:'clamp'})});var animatedStyle=this.props.animatedStyle||{};var shadowOpacity=animatedStyle.shadowOpacity,overlayOpacity=animatedStyle.overlayOpacity,containerAnimatedStyle=_objectWithoutProperties(animatedStyle,["shadowOpacity","overlayOpacity"]);var flattenedStyle=StyleSheet.flatten(style)||{};var backgroundColor=flattenedStyle.backgroundColor,screenStyle=_objectWithoutProperties(flattenedStyle,["backgroundColor"]);return React.createElement(Screen,{pointerEvents:pointerEvents,onComponentRef:this.props.onComponentRef,style:[containerAnimatedStyle,screenStyle],active:active,__source:{fileName:_jsxFileName,lineNumber:80}},!transparent&&shadowOpacity?React.createElement(Animated.View,{style:[styles.shadow,{shadowOpacity:shadowOpacity}],pointerEvents:"none",__source:{fileName:_jsxFileName,lineNumber:88}}):null,React.createElement(Animated.View,_extends({},getAccessibilityProps(isActive),{style:[transparent?styles.transparent:styles.card,backgroundColor&&backgroundColor!=='transparent'?{backgroundColor:backgroundColor}:null],__source:{fileName:_jsxFileName,lineNumber:93}}),children),overlayOpacity?React.createElement(Animated.View,{pointerEvents:"none",style:[styles.overlay,{opacity:overlayOpacity}],__source:{fileName:_jsxFileName,lineNumber:105}}):null);}}]);return Card;}(React.Component);var styles=StyleSheet.create({card:{flex:1,backgroundColor:'#fff'},overlay:_objectSpread({},StyleSheet.absoluteFillObject,{backgroundColor:'#000'}),shadow:{top:0,left:0,bottom:0,width:3,position:'absolute',backgroundColor:'#fff',shadowOffset:{width:-1,height:1},shadowRadius:5,shadowColor:'#000'},transparent:{flex:1,backgroundColor:'transparent'}});export default createPointerEventsContainer(Card);
//# sourceMappingURL=StackViewCard.js.map